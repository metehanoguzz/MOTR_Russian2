{"remainingRequest":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/screens/SubmitResultsScreen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/screens/SubmitResultsScreen.vue","mtime":1705539824090},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/cache-loader/dist/cjs.js","mtime":1697083066270},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js","mtime":1697083068088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vU2NyZWVuJzsKaW1wb3J0IFdhaXQgZnJvbSAnLi4vaGVscGVycy9XYWl0JzsKaW1wb3J0IERlYnVnUmVzdWx0c1NjcmVlbiBmcm9tICcuL0RlYnVnUmVzdWx0c1NjcmVlbic7CmltcG9ydCBTbGlkZSBmcm9tICcuLi9TbGlkZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU3VibWl0UmVzdWx0c1NjcmVlbicsCiAgY29tcG9uZW50czogeyBTbGlkZSwgRGVidWdSZXN1bHRzU2NyZWVuLCBXYWl0LCBTY3JlZW4gfSwKICBwcm9wczoge30sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGVycm9yOiBudWxsCiAgICB9OwogIH0sCiAgbWV0aG9kczogewogICAgYXN5bmMgc3VibWl0KGNiKSB7CiAgICAgIHRyeSB7CiAgICAgICAgYXdhaXQgdGhpcy4kbWFncGllLnN1Ym1pdCgpOwogICAgICAgIGNiKCk7CiAgICAgIH0gY2F0Y2ggKGVycikgewogICAgICAgIHRoaXMuZXJyb3IgPSBlcnIubWVzc2FnZTsKICAgICAgICBjYigpOwogICAgICB9CiAgICB9LAogICAgcmVkaXJlY3RUb0NvbXBsZXRpb25VcmwoKSB7CiAgICAgIGlmICh0aGlzLiRtYWdwaWUuY29tcGxldGlvblVybCAmJiB0aGlzLiRtYWdwaWUubW9kZSA9PT0gJ3Byb2xpZmljJykgewogICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IHRoaXMuJG1hZ3BpZS5jb21wbGV0aW9uVXJsOwogICAgICB9CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["SubmitResultsScreen.vue"],"names":[],"mappings":";AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SubmitResultsScreen.vue","sourceRoot":"node_modules/magpie-base/src/components/screens","sourcesContent":["<docs>\nUse this screen at the end of your experiment to submit the data to the server.\nYou can provide the submission URL to the Experiment component.\n</docs>\n\n<template>\n  <Screen v-if=\"!$magpie.debug\" title=\"Submitting\">\n    <Slide>\n      <p>{{ $t('screens.SubmitResultsScreen.waiting') }}</p>\n      <Wait :time=\"0\" @done=\"submit(() => $magpie.nextSlide())\" />\n    </Slide>\n    <Slide>\n      <p v-if=\"!error\">\n        {{ $t('screens.SubmitResultsScreen.done') }}\n        <Wait :time=\"3000\" @done=\"redirectToCompletionUrl\" />\n      </p>\n      <div v-else>\n        <p>{{ $t('screens.SubmitResultsScreen.error') }}</p>\n        <p>\n          {{ $t('screens.SubmitResultsScreen.contact') }}\n          <a :href=\"'mailto:' + $magpie.contactEmail\">{{\n            $magpie.contactEmail\n          }}</a\n          >.\n        </p>\n        <p v-text=\"error\" />\n      </div>\n    </Slide>\n  </Screen>\n  <DebugResultsScreen v-else />\n</template>\n\n<script>\nimport Screen from '../Screen';\nimport Wait from '../helpers/Wait';\nimport DebugResultsScreen from './DebugResultsScreen';\nimport Slide from '../Slide';\nexport default {\n  name: 'SubmitResultsScreen',\n  components: { Slide, DebugResultsScreen, Wait, Screen },\n  props: {},\n  data() {\n    return {\n      error: null\n    };\n  },\n  methods: {\n    async submit(cb) {\n      try {\n        await this.$magpie.submit();\n        cb();\n      } catch (err) {\n        this.error = err.message;\n        cb();\n      }\n    },\n    redirectToCompletionUrl() {\n      if (this.$magpie.completionUrl && this.$magpie.mode === 'prolific') {\n        window.location = this.$magpie.completionUrl;\n      }\n    }\n  }\n};\n</script>\n"]}]}