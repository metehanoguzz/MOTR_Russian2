{"remainingRequest":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/Screen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/Screen.vue","mtime":1697083069075},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/cache-loader/dist/cjs.js","mtime":1697083066270},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js","mtime":1697083068088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IHZhbGlkYXRpb25NaXhpbiB9IGZyb20gJ3Z1ZWxpZGF0ZSc7CmltcG9ydCBEZWJ1Z1N0YXRlbWVudCBmcm9tICcuL0RlYnVnU3RhdGVtZW50JzsKCi8qKgogKiBUaGlzIGNvbXBvbmVudCBsZXRzIHlvdSBjcmVhdGUgZXhwZXJpbWVudCBzZWN0aW9ucyB0aGF0IGFwcGVhciBvbmUgYWZ0ZXIgdGhlIG90aGVyIGxpa2UgYSBzbGlkZXNob3cuCiAqIFRyaWFsIGRhdGEKICovCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnU2NyZWVuJywKICBtaXhpbnM6IFt2YWxpZGF0aW9uTWl4aW5dLAogIHByb3BzOiB7CiAgICAvKioKICAgICAqIFRoZSB0aXRsZSBvZiB0aGlzIHNjcmVlbgogICAgICovCiAgICB0aXRsZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIHJlcXVpcmVkOiBmYWxzZSwKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICAvKioKICAgICAqIElmIHlvdSB3YW50IHRvIHNob3cgYSBwcm9ncmVzcyBiYXIsIHNldCB0aGlzIHRvIGEgdmFsdWUgYmV0d2VlbiAwIGFuZCAxCiAgICAgKi8KICAgIHByb2dyZXNzOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogLTEKICAgIH0sCiAgICAvKioKICAgICAqIEEgbGFiZWwgdGhhdCBjYW4gYmUgdXNlZCB0byBqdW1wIHRvIHRoaXMgc2NyZWVuCiAgICAgKi8KICAgIGxhYmVsOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICAvKioKICAgICAqIERlZmluZSB2YWxpZGF0b3JzIGZvciBtZWFzdXJlbWVudHMKICAgICAqLwogICAgdmFsaWRhdGlvbnM6IHsKICAgICAgdHlwZTogT2JqZWN0LAogICAgICBkZWZhdWx0KCkgewogICAgICAgIHJldHVybiB7fTsKICAgICAgfQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1lYXN1cmVtZW50czoge30KICAgIH07CiAgfSwKICB3YXRjaDogewogICAgJyRtYWdwaWUubWVhc3VyZW1lbnRzJzogewogICAgICBoYW5kbGVyKCkgewogICAgICAgIHRoaXMubWVhc3VyZW1lbnRzID0gdGhpcy4kbWFncGllLm1lYXN1cmVtZW50czsKICAgICAgICB0aGlzLiR2Lm1lYXN1cmVtZW50cy4kdG91Y2goKTsKICAgICAgfSwKICAgICAgZGVlcDogdHJ1ZQogICAgfQogIH0sCiAgYmVmb3JlTW91bnQoKSB7CiAgICB0aGlzLiRtYWdwaWUuc2V0UHJvZ3Jlc3ModGhpcy5wcm9ncmVzcyk7CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy4kbWFncGllLnZhbGlkYXRlTWVhc3VyZW1lbnRzID0gdGhpcy4kdi5tZWFzdXJlbWVudHM7CiAgICB0aGlzLiRtYWdwaWUubW91c2V0cmFja2luZy5zdGFydCgpOwogIH0sCiAgdmFsaWRhdGlvbnMoKSB7CiAgICByZXR1cm4gewogICAgICBtZWFzdXJlbWVudHM6IHRoaXMudmFsaWRhdGlvbnMKICAgIH07CiAgfSwKICAvKioKICAgKiBQbGFjZSB5b3VyIHNsaWRlcyBpbnNpZGUgdGhpcyBzbG90LiBUaGV5IHdpbGwgYmUgdmlzaWJsZSBvbmUgYWZ0ZXIgdGhlIG90aGVyLCBsaWtlIGEgc2xpZGUgc2hvdy4KICAgKiBAc2xvdCBkZWZhdWx0CiAgICovCiAgcmVuZGVyKGgpIHsKICAgIGNvbnN0IGNoaWxkcmVuID0gdGhpcy4kc2xvdHMuZGVmYXVsdDsKICAgIGlmICghY2hpbGRyZW4pIHsKICAgICAgcmV0dXJuIGgoJ2RpdicsIHsgY2xhc3M6ICdzY3JlZW4nIH0sIFsKICAgICAgICB0aGlzLnRpdGxlID8gaCgnaDInLCB0aGlzLnRpdGxlKSA6IG51bGwKICAgICAgXSk7CiAgICB9CiAgICBsZXQgc2xpZGU7CiAgICBjb25zdCBzbGlkZXMgPSBjaGlsZHJlbi5maWx0ZXIoKGMpID0+ICEhYy5jb21wb25lbnRPcHRpb25zKTsKICAgIGlmICgKICAgICAgc2xpZGVzLmxlbmd0aCAmJgogICAgICBzbGlkZXMuZXZlcnkoKGMpID0+IGMuY29tcG9uZW50T3B0aW9ucy50YWcgPT09ICdTbGlkZScpCiAgICApIHsKICAgICAgc2xpZGUgPSBzbGlkZXNbdGhpcy4kbWFncGllLmN1cnJlbnRTbGlkZUluZGV4XTsKICAgIH0gZWxzZSB7CiAgICAgIHNsaWRlID0gdGhpcy4kc2xvdHMuZGVmYXVsdDsKICAgICAgaWYgKHNsaWRlcy5zb21lKChjKSA9PiBjLmNvbXBvbmVudE9wdGlvbnMudGFnID09PSAnU2xpZGUnKSkgewogICAgICAgIHRoaXMuJG1hZ3BpZS53YXJuaW5nID0KICAgICAgICAgICdUaGlzIHNjcmVlbiByZWNlaXZlZCBtaXhlZCBjb250ZW50cy4gRWl0aGVyIHByb3ZpZGUgb25seSA8U2xpZGU+IGVsZW1lbnRzIGluc2lkZSB5b3VyIDxTY3JlZW4+IG9yIHByb3ZpZGUgdGhlIGNvbnRlbnRzIG9mIHRoZSBmaXJzdCBhbmQgb25seSBzbGlkZSBkaXJlY3RseS4nOwogICAgICB9CiAgICB9CiAgICAvLyBBdm9pZCByZXVzaW5nIGNoaWxkcmVuCiAgICBzbGlkZS5rZXkgPSB0aGlzLiRtYWdwaWUuY3VycmVudFNsaWRlSW5kZXg7CiAgICByZXR1cm4gaCgnZGl2JywgeyBjbGFzczogJ3NjcmVlbicgfSwgWwogICAgICB0aGlzLnRpdGxlID8gaCgnaDInLCB0aGlzLnRpdGxlKSA6IG51bGwsCiAgICAgIHNsaWRlLAogICAgICB0aGlzLiRtYWdwaWUud2FybmluZwogICAgICAgID8gaChEZWJ1Z1N0YXRlbWVudCwgewogICAgICAgICAgICBwcm9wczogewogICAgICAgICAgICAgIHRleHQ6IHRoaXMuJG1hZ3BpZS53YXJuaW5nLAogICAgICAgICAgICAgIHR5cGU6ICd3YXJuaW5nJwogICAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICAgIDogbnVsbAogICAgXSk7CiAgfQp9Owo="},{"version":3,"sources":["Screen.vue"],"names":[],"mappings":";AA8GA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Screen.vue","sourceRoot":"node_modules/magpie-base/src/components","sourcesContent":["<docs>\n### Simple screen\n\n```vue\n<Experiment>\n    <Screen>\n      Hello World.\n    </Screen>\n</Experiment>\n```\n\n### Show progress\n\n```vue\n<Experiment>\n    <Screen v-for=\"i in 10\" :key=\"i\" :progress=\"i/10\">\n      Hello World.\n      <button @click=\"$magpie.nextScreen()\">Next</button>\n    </Screen>\n</Experiment>\n```\n\n### Multiple slides\nOne screen may consist of multiple slides that are numbered incrementally and displayed one after another.\nYou can go to the next slide with the `nextSlide` function that is exposed by the Screen component.\n\n```vue\n<Experiment>\n    <Screen title=\"Wow.\">\n\n      <Slide>\n        Hello <button @click=\"$magpie.nextSlide()\">World</button>.\n      </Slide>\n\n      <Slide>\n        Hello you.\n      </Slide>\n\n    </Screen>\n</Experiment>\n```\n\n### Store measurements\nThe screen component also conveniently exposes an object for you to store in the measurements of the current screen, so you can later save them.\n\n```vue\n<Experiment>\n    <Screen title=\"Wow.\">\n      <Slide>\n        Hello\n        <TextareaInput :response.sync=\"$magpie.measurements.text\" />\n        {{ $magpie.measurements.text }}?\n        <button v-if=\"$magpie.measurements.text\" @click=\"$magpie.saveAndNextScreen()\">Done</button>\n      </Slide>\n    </Screen>\n\n    <DebugResultsScreen />\n\n</Experiment>\n```\n\n### Validate measurements\nThe screen can also be used to validate observations.\n\n```vue\n<Experiment>\n    <Screen :validations=\"{\n      text: {\n        minLength: $magpie.v.minLength(4),\n        alpha: $magpie.v.alpha\n      }\n    }\">\n\n      <Slide>\n        Hello\n        <TextareaInput :response.sync=\"$magpie.measurements.text\" />\n\n        {{ $magpie.measurements.text }}?\n\n        <button v-if=\"!$magpie.validateMeasurements.$invalid\" @click=\"$magpie.saveAndNextScreen()\">Done</button>\n\n        <p v-else>At least 4 characters required and only alphabetic characters, please.</p>\n\n      </Slide>\n\n    </Screen>\n\n    <DebugResults />\n</Experiment>\n```\n\n### Jump using labels\n\n```vue\n<Experiment>\n  <Screen v-for=\"i in 10\" :key=\"i\" :progress=\"i/10\" :label=\"'screen-'+i\">\n    Hello {{i}}th World.\n    <button @click=\"$magpie.nextScreen()\">Next</button>\n    <button @click=\"$magpie.nextScreen('end')\">Abort</button>\n  </Screen>\n  <Screen label=\"end\">\n    World's End.\n    <button @click=\"$magpie.nextScreen('screen-1')\">Restart</button>\n  </Screen>\n</Experiment>\n```\n\n</docs>\n\n<script>\nimport { validationMixin } from 'vuelidate';\nimport DebugStatement from './DebugStatement';\n\n/**\n * This component lets you create experiment sections that appear one after the other like a slideshow.\n * Trial data\n */\nexport default {\n  name: 'Screen',\n  mixins: [validationMixin],\n  props: {\n    /**\n     * The title of this screen\n     */\n    title: {\n      type: String,\n      required: false,\n      default: ''\n    },\n    /**\n     * If you want to show a progress bar, set this to a value between 0 and 1\n     */\n    progress: {\n      type: Number,\n      default: -1\n    },\n    /**\n     * A label that can be used to jump to this screen\n     */\n    label: {\n      type: String,\n      default: ''\n    },\n    /**\n     * Define validators for measurements\n     */\n    validations: {\n      type: Object,\n      default() {\n        return {};\n      }\n    }\n  },\n  data() {\n    return {\n      measurements: {}\n    };\n  },\n  watch: {\n    '$magpie.measurements': {\n      handler() {\n        this.measurements = this.$magpie.measurements;\n        this.$v.measurements.$touch();\n      },\n      deep: true\n    }\n  },\n  beforeMount() {\n    this.$magpie.setProgress(this.progress);\n  },\n  mounted() {\n    this.$magpie.validateMeasurements = this.$v.measurements;\n    this.$magpie.mousetracking.start();\n  },\n  validations() {\n    return {\n      measurements: this.validations\n    };\n  },\n  /**\n   * Place your slides inside this slot. They will be visible one after the other, like a slide show.\n   * @slot default\n   */\n  render(h) {\n    const children = this.$slots.default;\n    if (!children) {\n      return h('div', { class: 'screen' }, [\n        this.title ? h('h2', this.title) : null\n      ]);\n    }\n    let slide;\n    const slides = children.filter((c) => !!c.componentOptions);\n    if (\n      slides.length &&\n      slides.every((c) => c.componentOptions.tag === 'Slide')\n    ) {\n      slide = slides[this.$magpie.currentSlideIndex];\n    } else {\n      slide = this.$slots.default;\n      if (slides.some((c) => c.componentOptions.tag === 'Slide')) {\n        this.$magpie.warning =\n          'This screen received mixed contents. Either provide only <Slide> elements inside your <Screen> or provide the contents of the first and only slide directly.';\n      }\n    }\n    // Avoid reusing children\n    slide.key = this.$magpie.currentSlideIndex;\n    return h('div', { class: 'screen' }, [\n      this.title ? h('h2', this.title) : null,\n      slide,\n      this.$magpie.warning\n        ? h(DebugStatement, {\n            props: {\n              text: this.$magpie.warning,\n              type: 'warning'\n            }\n          })\n        : null\n    ]);\n  }\n};\n</script>\n\n<style scoped>\n.screen {\n  flex-grow: 1;\n  position: relative;\n}\n</style>\n"]}]}