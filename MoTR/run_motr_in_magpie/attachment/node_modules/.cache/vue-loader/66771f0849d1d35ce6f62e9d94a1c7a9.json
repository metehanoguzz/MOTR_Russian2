{"remainingRequest":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/screens/AwaitIteratedResultScreen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/screens/AwaitIteratedResultScreen.vue","mtime":1705539824070},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/cache-loader/dist/cjs.js","mtime":1697083066270},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js","mtime":1697083068088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCB7IHN0YXRlcyB9IGZyb20gJy4uLy4uL1NvY2tldCc7CmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vU2NyZWVuJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdBd2FpdEl0ZXJhdGVkUmVzdWx0U2NyZWVuJywKICBjb21wb25lbnRzOiB7IFNjcmVlbiB9LAogIHByb3BzOiB7fSwKICB3YXRjaDogewogICAgJyRtYWdwaWUuc29ja2V0Lml0ZXJhdGVkU3RhdGUnOiBmdW5jdGlvbiAoKSB7CiAgICAgIGlmICh0aGlzLiRtYWdwaWUuc29ja2V0Lml0ZXJhdGVkU3RhdGUgPT09IHN0YXRlcy5SRUFEWSkgewogICAgICAgIHRoaXMuJG1hZ3BpZS5uZXh0U2NyZWVuKCk7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRtYWdwaWUuc29ja2V0LmluaXRpYWxpemUoKTsKICAgIGlmICh0aGlzLiRtYWdwaWUuc29ja2V0Lml0ZXJhdGVkU3RhdGUgPT09IHN0YXRlcy5SRUFEWSkgewogICAgICB0aGlzLiRtYWdwaWUubmV4dFNjcmVlbigpOwogICAgfQogIH0KfTsK"},{"version":3,"sources":["AwaitIteratedResultScreen.vue"],"names":[],"mappings":";AAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AwaitIteratedResultScreen.vue","sourceRoot":"node_modules/magpie-base/src/components/screens","sourcesContent":["<docs>\nUse this screen to initiate the interactive socket connection. Once the connection is set up and\nenough users have joined, this screen will automatically go to the next screen.\n\nYou can customize the content of this screen by adding new content inside it.\nBy default it looks like this:\n\n```vue\n<Experiment>\n\n    <Screen>\n       <button @click=\"$magpie.nextScreen()\">Start</button>\n    </Screen>\n\n    <AwaitIteratedResultScreen :title=\"'Waiting for previous participants'\"></AwaitIteratedResultScreen>\n\n    <Screen>\n      <!-- Continue experiment with results from iterated experiment-->\n    </Screen>\n\n</Experiment>\n```\n\n</docs>\n<template>\n  <Screen v-bind=\"{ ...$attrs, ...$props }\">\n    <slot>\n      {{ $t('screens.AwaitIteratedResultScreen.description') }}\n    </slot>\n  </Screen>\n</template>\n\n<script>\nimport { states } from '../../Socket';\nimport Screen from '../Screen';\nexport default {\n  name: 'AwaitIteratedResultScreen',\n  components: { Screen },\n  props: {},\n  watch: {\n    '$magpie.socket.iteratedState': function () {\n      if (this.$magpie.socket.iteratedState === states.READY) {\n        this.$magpie.nextScreen();\n      }\n    }\n  },\n  mounted() {\n    this.$magpie.socket.initialize();\n    if (this.$magpie.socket.iteratedState === states.READY) {\n      this.$magpie.nextScreen();\n    }\n  }\n};\n</script>\n"]}]}