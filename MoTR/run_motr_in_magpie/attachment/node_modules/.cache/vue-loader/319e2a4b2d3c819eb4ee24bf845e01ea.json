{"remainingRequest":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/screens/PostTestScreen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/screens/PostTestScreen.vue","mtime":1705538937949},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/cache-loader/dist/cjs.js","mtime":1697083066270},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js","mtime":1697083068088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBTY3JlZW4gZnJvbSAnLi4vU2NyZWVuJzsKaW1wb3J0IFRleHRhcmVhSW5wdXQgZnJvbSAnLi4vaW5wdXRzL1RleHRhcmVhSW5wdXQnOwppbXBvcnQgRHJvcGRvd25JbnB1dCBmcm9tICcuLi9pbnB1dHMvRHJvcGRvd25JbnB1dCc7CmltcG9ydCBTbGlkZSBmcm9tICcuLi9TbGlkZSc7CgovKioKICogKipHbG9iYWwgTWVhc3VyZW1lbnRzKioKICoKICogfE1lYXN1cmVtZW50fFR5cGV8RGVzY3JpcHRpb258CiAqIHwtLXwtLS18LS0tfAogKiB8YWdlfGludHx8CiAqIHxnZW5kZXJ8JycgXHwgJ21hbGUnIFx8ICdmZW1hbGUnIFx8ICdvdGhlcid8fAogKiB8ZWR1Y2F0aW9ufCcnIFx8ICdiZWxvdyBoaWdoc2Nob29sJyBcfCAnaGlnaHNjaG9vbCcgXHwgJ2NvbGxlZ2UnIFx8ICdoaWdoZXInfHwKICogfGxhbmd1YWdlc3xzdHJpbmd8fAogKiB8Y29tbWVudHN8c3RyaW5nfHwKICovCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUG9zdFRlc3RTY3JlZW4nLAogIGNvbXBvbmVudHM6IHsKICAgIFNsaWRlLAogICAgRHJvcGRvd25JbnB1dCwKICAgIFRleHRhcmVhSW5wdXQsCiAgICBTY3JlZW4KICB9LAogIHByb3BzOiB7CiAgICAvKioKICAgICAqIFdoZXRoZXIgdG8gYXNrIGZvciBwYXJ0aWNpcGFudCBhZ2UKICAgICAqLwogICAgYWdlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICAvKioKICAgICAqIFdoZXRoZXIgdG8gYXNrIGZvciBwYXJ0aWNpcGFudCBnZW5kZXIKICAgICAqLwogICAgZ2VuZGVyOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICAvKioKICAgICAqIFdoZXRoZXIgdG8gYXNrIGZvciBwYXJ0aWNpcGFudCBlZHVjYXRpb24KICAgICAqLwogICAgZWR1Y2F0aW9uOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICAvKioKICAgICAqIFdoZXRoZXIgdG8gYXNrIGZvciBwYXJ0aWNpcGFudCBtb3RoZXIgdG9uZ3VlcwogICAgICovCiAgICBsYW5ndWFnZXM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIC8qKgogICAgICogV2hldGhlciB0byBhc2sgZm9yIGNvbW1lbnRzCiAgICAgKi8KICAgIGNvbW1lbnRzOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["PostTestScreen.vue"],"names":[],"mappings":";AA4FA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PostTestScreen.vue","sourceRoot":"node_modules/magpie-base/src/components/screens","sourcesContent":["<docs>\n```vue\n<Experiment>\n    <PostTestScreen />\n\n    <DebugResultsScreen />\n\n</Experiment>\n```\n</docs>\n\n<template>\n  <Screen v-bind=\"{ ...$attrs, ...$props }\" title=\"Additional information\">\n    <Slide>\n      <p>\n        {{ $t('screens.PostTestScreen.instruction') }}\n      </p>\n      <div style=\"text-align: left; width: 200px; margin: 0 auto\">\n        <p v-if=\"age\">\n          <label\n            >{{ $t('screens.PostTestScreen.age') }}\n            <input\n              v-model=\"$magpie.measurements.age\"\n              type=\"number\"\n              max=\"110\"\n              min=\"18\"\n          /></label>\n        </p>\n        <p v-if=\"gender\">\n          <label\n            >{{ $t('screens.PostTestScreen.gender') }}\n            <DropdownInput\n              :options=\"[\n                '',\n                $t('screens.PostTestScreen.male'),\n                $t('screens.PostTestScreen.female'),\n                $t('screens.PostTestScreen.otherGender')\n              ]\"\n              :response.sync=\"$magpie.measurements.gender\"\n            />\n          </label>\n        </p>\n        <p v-if=\"education\">\n          <label\n            >{{ $t('screens.PostTestScreen.education') }}\n            <DropdownInput\n              :options=\"[\n                '',\n                $t('screens.PostTestScreen.educationBelowHighschool'),\n                $t('screens.PostTestScreen.educationHighschool'),\n                $t('screens.PostTestScreen.educationCollege'),\n                $t('screens.PostTestScreen.educationHigher')\n              ]\"\n              :response.sync=\"$magpie.measurements.education\"\n            />\n          </label>\n        </p>\n        <p v-if=\"languages\">\n          <label\n            >{{ $t('screens.PostTestScreen.nativeLanguages') }}\n            <input\n              v-model=\"$magpie.measurements.languages\"\n              type=\"text\"\n              :placeholder=\"\n                $t('screens.PostTestScreen.nativeLanguagesExplanation')\n              \"\n              :title=\"$t('screens.PostTestScreen.nativeLanguagesExplanation')\"\n          /></label>\n        </p>\n        <!-- @slot You can add additional questions here, storing data in measurements\n           @binding {object} measurements a temporary object to store your responses before adding them to the results\n           -->\n        <slot :measurements=\"$magpie.measurements\" />\n        {{ $t('screens.PostTestScreen.comments') }}\n        <TextareaInput\n          :response.sync=\"$magpie.measurements.comments\"\n        ></TextareaInput>\n      </div>\n\n      <button\n        @click=\"\n          $magpie.addExpData($magpie.measurements);\n          $magpie.nextScreen();\n        \"\n      >\n        {{ $t('general.nextButton') }}\n      </button>\n    </Slide>\n  </Screen>\n</template>\n\n<script>\nimport Screen from '../Screen';\nimport TextareaInput from '../inputs/TextareaInput';\nimport DropdownInput from '../inputs/DropdownInput';\nimport Slide from '../Slide';\n\n/**\n * **Global Measurements**\n *\n * |Measurement|Type|Description|\n * |--|---|---|\n * |age|int||\n * |gender|'' \\| 'male' \\| 'female' \\| 'other'||\n * |education|'' \\| 'below highschool' \\| 'highschool' \\| 'college' \\| 'higher'||\n * |languages|string||\n * |comments|string||\n */\nexport default {\n  name: 'PostTestScreen',\n  components: {\n    Slide,\n    DropdownInput,\n    TextareaInput,\n    Screen\n  },\n  props: {\n    /**\n     * Whether to ask for participant age\n     */\n    age: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Whether to ask for participant gender\n     */\n    gender: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Whether to ask for participant education\n     */\n    education: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Whether to ask for participant mother tongues\n     */\n    languages: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Whether to ask for comments\n     */\n    comments: {\n      type: Boolean,\n      default: true\n    }\n  }\n};\n</script>\n<style scoped></style>\n"]}]}