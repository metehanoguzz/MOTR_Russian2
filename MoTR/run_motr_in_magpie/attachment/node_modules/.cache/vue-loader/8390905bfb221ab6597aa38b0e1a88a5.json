{"remainingRequest":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/inputs/MazeInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/inputs/MazeInput.vue","mtime":1705538937938},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/cache-loader/dist/cjs.js","mtime":1697083066270},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js","mtime":1697083068088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBLZXlwcmVzc0lucHV0IGZyb20gJy4uL2lucHV0cy9LZXlwcmVzc0lucHV0JzsKaW1wb3J0IFNlcmlhbElucHV0IGZyb20gJy4uL2lucHV0cy9TZXJpYWxJbnB1dCc7CmltcG9ydCBUaW1lclN0b3AgZnJvbSAnLi4vaGVscGVycy9UaW1lclN0b3AnOwppbXBvcnQgVGltZXJTdGFydCBmcm9tICcuLi9oZWxwZXJzL1RpbWVyU3RhcnQnOwppbXBvcnQgXyBmcm9tICdsb2Rhc2gnOwppbXBvcnQgV2FpdCBmcm9tICcuLi9oZWxwZXJzL1dhaXQnOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdNYXplSW5wdXQnLAogIGNvbXBvbmVudHM6IHsgV2FpdCwgVGltZXJTdGFydCwgVGltZXJTdG9wLCBTZXJpYWxJbnB1dCwgS2V5cHJlc3NJbnB1dCB9LAogIHByb3BzOiB7CiAgICAvKioKICAgICAqIFRhcmdldCBjaHVua3MKICAgICAqLwogICAgdGFyZ2V0czogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICAvKioKICAgICAqIENvbXBldGl0b3IgY2h1bmtzCiAgICAgKi8KICAgIGNvbXBldGl0b3JzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIC8qKgogICAgICogVGhlIGtleWJvYXJkIGtleSB0byBwcmVzcyBmb3IgdGhlIGxlZnQgY29udGludWF0aW9uCiAgICAgKi8KICAgIGxlZnRLZXk6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnZicKICAgIH0sCiAgICAvKioKICAgICAqIFRoZSBrZXlib2FyZCBrZXkgdG8gcHJlc3MgZm9yIHRoZSByaWdodCBjb250aW51YXRpb24KICAgICAqLwogICAgcmlnaHRLZXk6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnaicKICAgIH0sCiAgICAvKioKICAgICAqIFdoZXRoZXIgdG8gc2hvdyB0aGUgb3B0aW9ucyBmb3IgdGhlIEtleXByZXNzSW5wdXQKICAgICAqLwogICAgc2hvd0tleXByZXNzT3B0aW9uczogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgLyoqCiAgICAgKiBNYXhpbXVtIHRpbWUgYWxvdHRlZCBmb3IgYSBzaW5nbGUgcmVzcG9uc2UKICAgICAqLwogICAgcmVzcG9uc2VUaW1lTGltaXQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAtMQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIGNvbnN0IGxlbmd0aCA9IHRoaXMudGFyZ2V0cy5sZW5ndGg7CiAgICBjb25zdCB0YXJnZXRPbkxlZnQgPSBfLm1hcChfLnJhbmdlKGxlbmd0aCksICgpID0+IF8ucmFuZG9tKCkpOwogICAgcmV0dXJuIHsKICAgICAgcmVzcG9uc2VUaW1lczogW10sCiAgICAgIHJlc3BvbnNlczogW10sCiAgICAgIHRhcmdldE9uTGVmdCwKICAgICAgdGFyZ2V0UG9zaXRpb25zOiB0YXJnZXRPbkxlZnQubWFwKChsZWZ0KSA9PiAobGVmdCA/ICdsZWZ0JyA6ICdyaWdodCcpKSwKICAgICAgdGltZW91dDogZmFsc2UsCiAgICAgIGNvcnJlY3Q6IHRydWUKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRMZWZ0T3B0aW9uKGkpIHsKICAgICAgcmV0dXJuIHRoaXMudGFyZ2V0T25MZWZ0W2ldID09PSAxID8gdGhpcy50YXJnZXRzW2ldIDogdGhpcy5jb21wZXRpdG9yc1tpXTsKICAgIH0sCiAgICBnZXRSaWdodE9wdGlvbihpKSB7CiAgICAgIHJldHVybiB0aGlzLnRhcmdldE9uTGVmdFtpXSA9PT0gMCA/IHRoaXMudGFyZ2V0c1tpXSA6IHRoaXMuY29tcGV0aXRvcnNbaV07CiAgICB9LAogICAgZ2V0T3B0aW9uKHNpZGUsIGkpIHsKICAgICAgcmV0dXJuIHNpZGUgPT09ICdsZWZ0JyA/IHRoaXMuZ2V0TGVmdE9wdGlvbihpKSA6IHRoaXMuZ2V0UmlnaHRPcHRpb24oaSk7CiAgICB9LAogICAgZW5kKCkgewogICAgICAvKioKICAgICAgICogVGhlIGxpc3Qgb2YgcmVzcG9uc2UgdGltZXMgcGVyIGl0ZW0KICAgICAgICogQHByb3BlcnR5IHthcnJheX0KICAgICAgICovCiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTpyZXNwb25zZS10aW1lcycsIHRoaXMucmVzcG9uc2VUaW1lcyk7CgogICAgICAvKioKICAgICAgICogVGhlIGxpc3Qgb2Ygc2VsZWN0ZWQgb3B0aW9ucwogICAgICAgKiBAcHJvcGVydHkge2FycmF5fQogICAgICAgKi8KICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnJlc3BvbnNlcycsIHRoaXMucmVzcG9uc2VzKTsKICAgICAgLyoqCiAgICAgICAqIFRoZSBsaXN0IG9mIHRhcmdldCBwb3NpdGlvbnMgKGVpdGhlciAnbGVmdCcgb3IgJ3JpZ2h0JykKICAgICAgICogQHByb3BlcnR5IHthcnJheX0KICAgICAgICovCiAgICAgIHRoaXMuJGVtaXQoJ3VwZGF0ZTp0YXJnZXQtcG9zaXRpb25zJywgdGhpcy50YXJnZXRQb3NpdGlvbnMpOwogICAgICAvKioKICAgICAgICogV2hldGhlciBhbGwgcmVzcG9uc2VzIHNlbGVjdGVkIHRoZSB0YXJnZXQgd29yZAogICAgICAgKiBAcHJvcGVydHkge2Jvb2xlYW59CiAgICAgICAqLwogICAgICB0aGlzLiRlbWl0KCd1cGRhdGU6Y29ycmVjdCcsIHRoaXMuY29ycmVjdCk7CiAgICAgIC8qKgogICAgICAgKiBXaGV0aGVyIHRoZSBwYXJ0aWNpcGFudCB0b29rIGxvbmdlciB0aGFuIHRoZSB0aW1lb3V0IGZvciBvbmUgaXRlbSBhbmQgdGhlIHRhc2sgd2FzIGFib3J0ZWQKICAgICAgICogQHByb3BlcnR5IHtib29sZWFufQogICAgICAgKi8KICAgICAgdGhpcy4kZW1pdCgndXBkYXRlOnRpbWVvdXQnLCB0aGlzLnRpbWVvdXQpOwogICAgICAvKioKICAgICAgICogRW1pdHRlZCB3aGVuIHRoZSB0YXNrIHdhcyBhYm9ydGVkIGR1ZSB0byB0aW1lb3V0IG9yIGluY29ycmVjdCByZXNwb25zZSwgb3IgYWZ0ZXIgc2VsZWN0aW5nIHRoZSBsYXN0IGNvcnJlY3Qgb3B0aW9uCiAgICAgICAqLwogICAgICB0aGlzLiRlbWl0KCdlbmQnKTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["MazeInput.vue"],"names":[],"mappings":";AAifile":"MazeInput.vue","sourceRoot":"node_modules/magpie-base/src/components/inputs","sourcesContent":["<docs>\n\n```vue\n<Experiment>\n    <Screen>\n        <MazeInput\n            :targets=\"['This', 'is', 'a', 'nice', 'text']\"\n            :competitors=\"['xxx-xxx', 'can', 'usually', 'quite', 'yummy']\"\n            :response-times.sync=\"$magpie.measurements.times\"\n            :responses.sync=\"$magpie.measurements.responses\"\n            :timeout.sync=\"$magpie.measurements.timeout\"\n            :correct.sync=\"$magpie.measurements.correct\"\n            :target-positions.sync=\"$magpie.measurements.target_positions\"\n            @end=\"$magpie.saveAndNextScreen()\" />\n    </Screen>\n\n    <DebugResultsScreen />\n</Experiment>\n```\n\n</docs>\n\n<template>\n  <div>\n    <SerialInput :iterations=\"targets.length + 1\" @end=\"end\">\n      <template #default=\"{ i, next }\">\n        <template v-if=\"timeout\">\n          <TimerStop\n            id=\"responseTime\"\n            @update:time=\"responseTimes.push($event)\"\n          />\n          <Wait :time=\"0\" @done=\"end\" />\n        </template>\n        <template v-else-if=\"correct\">\n          <TimerStop\n            v-if=\"i > 0\"\n            id=\"responseTime\"\n            @update:time=\"\n              responseTimes.push($event);\n              i === targets.length ? next() : null;\n            \"\n          />\n          <TimerStart id=\"responseTime\" />\n          <Wait\n            v-if=\"responseTimeLimit !== -1\"\n            :time=\"responseTimeLimit\"\n            @done=\"timeout = true\"\n          />\n\n          <KeypressInput\n            :keys=\"{ [leftKey]: 'left', [rightKey]: 'right' }\"\n            :show-options=\"showKeypressOptions\"\n            @update:response=\"\n              correct = targets[i] === getOption($event, i);\n              responses.push(getOption($event, i));\n              next();\n            \"\n          />\n\n          <div class=\"options\">\n            <div class=\"option\">\n              {{ getLeftOption(i) }}\n            </div>\n            <div class=\"option\">\n              {{ getRightOption(i) }}\n            </div>\n          </div>\n        </template>\n        <template v-else>\n          <TimerStop\n            id=\"responseTime\"\n            @update:time=\"responseTimes.push($event)\"\n          />\n          <Wait :time=\"0\" @done=\"end\" />\n        </template>\n      </template>\n    </SerialInput>\n  </div>\n</template>\n\n<script>\nimport KeypressInput from '../inputs/KeypressInput';\nimport SerialInput from '../inputs/SerialInput';\nimport TimerStop from '../helpers/TimerStop';\nimport TimerStart from '../helpers/TimerStart';\nimport _ from 'lodash';\nimport Wait from '../helpers/Wait';\n\nexport default {\n  name: 'MazeInput',\n  components: { Wait, TimerStart, TimerStop, SerialInput, KeypressInput },\n  props: {\n    /**\n     * Target chunks\n     */\n    targets: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Competitor chunks\n     */\n    competitors: {\n      type: Array,\n      required: true\n    },\n    /**\n     * The keyboard key to press for the left continuation\n     */\n    leftKey: {\n      type: String,\n      default: 'f'\n    },\n    /**\n     * The keyboard key to press for the right continuation\n     */\n    rightKey: {\n      type: String,\n      default: 'j'\n    },\n    /**\n     * Whether to show the options for the KeypressInput\n     */\n    showKeypressOptions: {\n      type: Boolean,\n      default: true\n    },\n    /**\n     * Maximum time alotted for a single response\n     */\n    responseTimeLimit: {\n      type: Number,\n      default: -1\n    }\n  },\n  data() {\n    const length = this.targets.length;\n    const targetOnLeft = _.map(_.range(length), () => _.random());\n    return {\n      responseTimes: [],\n      responses: [],\n      targetOnLeft,\n      targetPositions: targetOnLeft.map((left) => (left ? 'left' : 'right')),\n      timeout: false,\n      correct: true\n    };\n  },\n  methods: {\n    getLeftOption(i) {\n      return this.targetOnLeft[i] === 1 ? this.targets[i] : this.competitors[i];\n    },\n    getRightOption(i) {\n      return this.targetOnLeft[i] === 0 ? this.targets[i] : this.competitors[i];\n    },\n    getOption(side, i) {\n      return side === 'left' ? this.getLeftOption(i) : this.getRightOption(i);\n    },\n    end() {\n      /**\n       * The list of response times per item\n       * @property {array}\n       */\n      this.$emit('update:response-times', this.responseTimes);\n\n      /**\n       * The list of selected options\n       * @property {array}\n       */\n      this.$emit('update:responses', this.responses);\n      /**\n       * The list of target positions (either 'left' or 'right')\n       * @property {array}\n       */\n      this.$emit('update:target-positions', this.targetPositions);\n      /**\n       * Whether all responses selected the target word\n       * @property {boolean}\n       */\n      this.$emit('update:correct', this.correct);\n      /**\n       * Whether the participant took longer than the timeout for one item and the task was aborted\n       * @property {boolean}\n       */\n      this.$emit('update:timeout', this.timeout);\n      /**\n       * Emitted when the task was aborted due to timeout or incorrect response, or after selecting the last correct option\n       */\n      this.$emit('end');\n    }\n  }\n};\n</script>\n\n<style scoped>\n.option {\n  background-color: #5187ba;\n  border: none;\n  border-radius: 2px;\n  color: white;\n  cursor: pointer;\n  display: inline-block;\n  font-family: 'Lato', 'Noto Sans', sans-serif;\n  font-size: 30px;\n  line-height: 40px;\n  font-weight: 700;\n  letter-spacing: 0.9px;\n  margin: 0 70px 70px 70px;\n  outline: none;\n  padding: 5px 10px;\n  text-transform: uppercase;\n}\n\n.option:hover {\n  background-color: #324d93;\n}\n</style>\n"]}]}