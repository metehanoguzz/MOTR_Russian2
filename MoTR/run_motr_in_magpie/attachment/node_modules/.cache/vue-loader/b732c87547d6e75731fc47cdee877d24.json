{"remainingRequest":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/trial_screens/SelfPacedReadingScreen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/trial_screens/SelfPacedReadingScreen.vue","mtime":1697083069080},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/cache-loader/dist/cjs.js","mtime":1697083066270},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js","mtime":1697083068088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBMaWZlY3ljbGVTY3JlZW4gZnJvbSAnLi4vc2NyZWVucy9MaWZlY3ljbGVTY3JlZW4nOwppbXBvcnQgU2VsZlBhY2VkUmVhZGluZ0lucHV0IGZyb20gJy4uL2lucHV0cy9TZWxmUGFjZWRSZWFkaW5nSW5wdXQnOwoKLyoqCiAqIEluaGVyaXRzIGZyb20gTGlmZWN5Y2xlU2NyZWVuCiAqCiAqICoqU2NyZWVuIE1lYXN1cmVtZW50cyoqCiAqCiAqIHxNZWFzdXJlbWVudHxUeXBlfERlc2NyaXB0aW9ufAogKiB8LS18LS0tfC0tLXwKICogfHJlc3BvbnNlVGltZXxpbnR8VGltZSBiZXR3ZWVuIGRpc3BsYXkgb2YgdGhpcyBzY3JlZW4gdW50aWwgdGhlIHNjcmVlbiBpcyBsZWZ0fAogKiB8cmVzcG9uc2VUaW1lb3V0fGJvb2xlYW58V2hldGhlciB0aGUgcmVzcG9uc2UgdGltZSBsaW1pdCB3YXMgcmVhY2hlZHwKICogfHF1ZCAqKG9wdGlvbmFsKSp8c3RyaW5nfHwKICogfHBhdXNlVGltZSAqKG9wdGlvbmFsKSp8aW50fHwKICogfGZpeGF0aW9uVGltZSAqKG9wdGlvbmFsKSp8aW50fHwKICogfHN0aW11bHVzVGltZSAqKG9wdGlvbmFsKSp8aW50fHwKICogfHJlc3BvbnNlVGltZUxpbWl0ICoob3B0aW9uYWwpKnxpbnR8VGhlIHJlc3BvbnNlIHRpbWUgbGltaXR8CiAqIHxmZWVkYmFja1RpbWUgKihvcHRpb25hbCkqfGludHx8CiAqIHxxdWVzdGlvbnxzdHJpbmd8fAogKiB8cmVzcG9uc2VzfHN0cmluZ3xUaGUgc2VsZWN0ZWQgcmVzcG9uc2VzfAogKiB8cmVzcG9uc2VfdGltZXN8c3RyaW5nfFRoZSByZXNwb25zZSB0aW1lcyBwZXIgc2VsZWN0YWJsZSBvcHRpb258CiAqIHxzcHJfdGltZW91dHxib29sZWFufFdoZXRoZXIgdGhlIHBhcnRpY2lwYW50IHRvb2sgbG9uZ2VyIHRoYW4gdGhlIHNldCB0aW1lIGxpbWl0IHBlciBjaHVua3wKICogfHNwclRpbWVMaW1pdHxpbnR8VGltZSBsaW1pdCBwZXIgY2h1bmt8CiAqCiAqLwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1NlbGZQYWNlZFJlYWRpbmdTY3JlZW4nLAogIGNvbXBvbmVudHM6IHsgTGlmZWN5Y2xlU2NyZWVuLCBTZWxmUGFjZWRSZWFkaW5nSW5wdXQgfSwKICBleHRlbmRzOiBMaWZlY3ljbGVTY3JlZW4sCiAgcHJvcHM6IHsKICAgIC8qKgogICAgICogQSBxdWVzdGlvbgogICAgICovCiAgICBxdWVzdGlvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfSwKICAgIC8qKgogICAgICogU2VsZi1wYWNlZCByZWFkaW5nIHRleHQgY2h1bmtzCiAgICAgKi8KICAgIGNodW5rczogewogICAgICB0eXBlOiBBcnJheSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICAvKioKICAgICAqIEdpdmUgaW5zdHJ1Y3Rpb25zIG9uIHdoYXQgdGhlIHBhcnRpY2lwYW50IGlzIHN1cHBvc2VkIHRvIGRvCiAgICAgKi8KICAgIGluc3RydWN0aW9uczogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdQcmVzcyBTUEFDRSB0byByZXZlYWwgdGhlIHdvcmRzLicKICAgIH0sCiAgICAvKioKICAgICAqIFRoZSBrZXkgdG8gcHJlc3MgdG8gcmV2ZWFsIHRoZSBuZXh0IHdvcmQKICAgICAqLwogICAgdHJpZ2dlcjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICcgJwogICAgfSwKICAgIC8qKgogICAgICogVW5kZXJsaW5lIHR5cGUKICAgICAqCiAgICAgKiBAdmFsdWVzIHdvcmRzLCBzZW50ZW5jZSBvciBub25lCiAgICAgKi8KICAgIHVuZGVybGluZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdub25lJwogICAgfSwKICAgIC8qKgogICAgICogV2hldGhlciB0byBzaG93IHRoZSBuZXh0IHdvcmQgYXQgdGhlIHNhbWUgcG9zaXRpb24gb3IgYXQgdGhlIG5leHQKICAgICAqCiAgICAgKiBAdmFsdWVzIHNhbWUgb3IgbmV4dAogICAgICovCiAgICB3b3JkUG9zOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3NhbWUnCiAgICB9LAogICAgLyoqCiAgICAgKiBUaW1lIGxpbWl0IHBlciBjaHVuawogICAgICovCiAgICBzcHJUaW1lTGltaXQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAtMQogICAgfQogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHJlc3BvbnNlVGltZXM6IFtdLAogICAgICByZXNwb25zZVRpbWVvdXQ6IGZhbHNlCiAgICB9OwogIH0KfTsK"},{"version":3,"sources":["SelfPacedReadingScreen.vue"],"names":[],"mappings":";AA8DA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"SelfPacedReadingScreen.vue","sourceRoot":"node_modules/magpie-base/src/components/trial_screens","sourcesContent":["<docs>\nThis is a pre-built self-paced reading task screen.\n\n```vue\n<Experiment>\n  <SelfPacedReadingScreen\n      question=\"Are fries healthy?\"\n      :chunks=\"['Fries', 'are', 'very', 'healthy', 'indeed.']\">\n    <template #stimulus>\n      <img src=\"img/fries.jpg\" />\n    </template>\n  </SelfPacedReadingScreen>\n\n  <DebugResultsScreen />\n\n</Experiment>\n```\n</docs>\n\n<template>\n  <!-- pass down props -->\n  <LifecycleScreen v-bind=\"{ ...$attrs, ...$props }\">\n    <!-- pass down slots -->\n    <template #fixation>\n      <slot name=\"fixation\"><FixationCross /></slot>\n    </template>\n    <template #stimulus>\n      <slot name=\"stimulus\"></slot>\n    </template>\n\n    <!-- SPR task -->\n    <template #task>\n      <Record\n        :data=\"{\n          chunks,\n          trigger,\n          underline,\n          wordPos,\n          question\n        }\"\n      />\n      <p v-if=\"question\" v-text=\"question\"></p>\n      <p v-if=\"instructions\" v-text=\"instructions\"></p>\n      <SelfPacedReadingInput\n        :chunks=\"chunks\"\n        :word-pos=\"wordPos\"\n        :underline=\"underline\"\n        :trigger=\"trigger\"\n        :response-times.sync=\"$magpie.measurements.response_times\"\n        :timeout.sync=\"$magpie.measurements.spr_timeout\"\n        :show-keypress-options=\"false\"\n        @end=\"nextAfterResponse\"\n      />\n    </template>\n\n    <template #feedback>\n      <slot name=\"feedback\" />\n    </template>\n  </LifecycleScreen>\n</template>\n\n<script>\nimport LifecycleScreen from '../screens/LifecycleScreen';\nimport SelfPacedReadingInput from '../inputs/SelfPacedReadingInput';\n\n/**\n * Inherits from LifecycleScreen\n *\n * **Screen Measurements**\n *\n * |Measurement|Type|Description|\n * |--|---|---|\n * |responseTime|int|Time between display of this screen until the screen is left|\n * |responseTimeout|boolean|Whether the response time limit was reached|\n * |qud *(optional)*|string||\n * |pauseTime *(optional)*|int||\n * |fixationTime *(optional)*|int||\n * |stimulusTime *(optional)*|int||\n * |responseTimeLimit *(optional)*|int|The response time limit|\n * |feedbackTime *(optional)*|int||\n * |question|string||\n * |responses|string|The selected responses|\n * |response_times|string|The response times per selectable option|\n * |spr_timeout|boolean|Whether the participant took longer than the set time limit per chunk|\n * |sprTimeLimit|int|Time limit per chunk|\n *\n */\nexport default {\n  name: 'SelfPacedReadingScreen',\n  components: { LifecycleScreen, SelfPacedReadingInput },\n  extends: LifecycleScreen,\n  props: {\n    /**\n     * A question\n     */\n    question: {\n      type: String,\n      default: undefined\n    },\n    /**\n     * Self-paced reading text chunks\n     */\n    chunks: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Give instructions on what the participant is supposed to do\n     */\n    instructions: {\n      type: String,\n      default: 'Press SPACE to reveal the words.'\n    },\n    /**\n     * The key to press to reveal the next word\n     */\n    trigger: {\n      type: String,\n      default: ' '\n    },\n    /**\n     * Underline type\n     *\n     * @values words, sentence or none\n     */\n    underline: {\n      type: String,\n      default: 'none'\n    },\n    /**\n     * Whether to show the next word at the same position or at the next\n     *\n     * @values same or next\n     */\n    wordPos: {\n      type: String,\n      default: 'same'\n    },\n    /**\n     * Time limit per chunk\n     */\n    sprTimeLimit: {\n      type: Number,\n      default: -1\n    }\n  },\n  data() {\n    return {\n      responseTimes: [],\n      responseTimeout: false\n    };\n  }\n};\n</script>\n\n<style scoped>\n.text {\n  margin: 30px auto;\n}\n\n.text * {\n  margin-right: 5px;\n}\n\n.text.underline-sentence * {\n  margin-right: 0;\n  padding-right: 5px;\n  border-bottom: 1px solid black;\n}\n\n.text.underline-words * {\n  border-bottom: 1px solid black;\n}\n\n.text :not(.current) {\n  display: none;\n}\n\n.text.show-all :not(.current) {\n  color: transparent;\n  display: inline;\n}\n\n.text .current {\n  color: black;\n  display: inline;\n}\n</style>\n"]}]}