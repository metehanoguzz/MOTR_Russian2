{"remainingRequest":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/src/App.vue?vue&type=template&id=7ba5bd90&","dependencies":[{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/src/App.vue","mtime":1705543151579},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/cache-loader/dist/cjs.js","mtime":1697083066270},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1697083068273},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/cache-loader/dist/cjs.js","mtime":1697083066270},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js","mtime":1697083068088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPEV4cGVyaW1lbnQgdGl0bGU9Ik1vdXNlIHRyYWNraW5nIGZvciBSZWFkaW5nIj4KCiAgICA8U2NyZWVuIDp0aXRsZT0iJ1dlbGNvbWVUYSciIGNsYXNzPSJpbnN0cnVjdGlvbnMiIDp2YWxpZGF0aW9ucz0iewogICAgICAgIFN1YmplY3RJRDogewogICAgICAgICAgbWluTGVuZ3RoOiAkbWFncGllLnYubWluTGVuZ3RoKDIpCiAgICAgICAgfQogICAgICB9Ij4KICAgICAgICA8IS0tIDxXZWxjb21lU2NyZWVuIC8+IC0tPgogICAgICAgIDxkaXYgc3R5bGU9IndpZHRoOiA0MGVtOyBtYXJnaW46IGF1dG87Ij4KCiAgICAgICAgPGRpdiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmV5OyBwYWRkaW5nOiAxMHB4OyI+CiAgICAgICAgICAgIDxiPiBJbmZvcm1hdGlvbiBBYm91dCB0aGlzIFN0dWR5IDwvYj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8cD4KICAgICAgICAgIFdlIHdvdWxkIGxpa2UgdG8gYXNrIHlvdSBpZiB5b3UgYXJlIHdpbGxpbmcgdG8gcGFydGljaXBhdGUgaW4gb3VyIHJlc2VhcmNoIHByb2plY3QuIFlvdXIgcGFydGljaXBhdGlvbiBpcyB2b2x1bnRhcnkuIFBsZWFzZSByZWFkIHRoZSB0ZXh0IGJlbG93IGNhcmVmdWxseSBhbmQgYXNrIHRoZSBjb25kdWN0aW5nIHBlcnNvbiBhYm91dCBhbnl0aGluZyB5b3UgZG8gbm90IHVuZGVyc3RhbmQgb3Igd291bGQgbGlrZSB0byBrbm93LgogICAgICAgIDxicj48YnI+CiAgICAgICAgICA8Yj5XaGF0IGlzIGludmVzdGlnYXRlZCBhbmQgaG93PzwvYj4gWW91IGFyZSBiZWluZyBhc2tlZCB0byB0YWtlIHBhcnQgaW4gYSByZXNlYXJjaCBzdHVkeSBiZWluZyBkb25lIGJ5IEV0aGFuIFdpbGNveCwgYSByZXNlYXJjaGVyIGF0IHRoZSBTd2lzcyBGZWRlcmFsIEluc3RpdHV0ZSBvZiBUZWNobm9sb2d5LiBUaGlzIHN0dWR5IHdpbGwgaGVscCB1cyBsZWFybiBhYm91dCBob3cgcGVvcGxlIHJlYWQuIEl0IHdpbGwgdGFrZSB5b3UgYXJvdW5kIDIwIG1pbnV0ZXMgdG8gY29tcGxldGUuCiAgICAgICAgPGJyPjxicj4KICAgICAgICAgIDxiPldobyBjYW4gcGFydGljaXBhdGU/PC9iPiBZb3UgY2FuIHBhcnRpY2lwYXRlIG9ubHkgaWYgeW91IGFyZSBhbiBhZHVsdCBuYXRpdmUgc3BlYWtlciBvZiBFbmdsaXNoLgogICAgICAgIDxicj48YnI+CiAgICAgICAgIDxiPldoYXQgYW0gSSBzdXBwb3NlZCB0byBkbyBhcyBhIHBhcnRpY2lwYW50PzwvYj4gSWYgeW91IGNob29zZSB0byBiZSBpbiB0aGUgc3R1ZHksIHlvdSB3aWxsIHVzZSB0aGUgY29tcHV0ZXIgbW91c2UgdG8gcmVhZCBzZW50ZW5jZXMgaW4gRW5nbGlzaCBhbmQgYW5zd2VyIHF1ZXN0aW9ucyBhYm91dCB0aGVtLgogICAgICAgIDxicj48YnI+CiAgICAgICAgICA8Yj5XaGF0IGFyZSBteSByaWdodHMgZHVyaW5nIHBhcnRpY2lwYXRpb24/PC9iPiBZb3VyIHBhcnRpY2lwYXRpb24gaW4gdGhpcyBzdHVkeSBpcyB2b2x1bnRhcnkuIElmIHlvdSBjaG9vc2UgdG8gcGFydGljaXBhdGUsIHlvdSBtYXkgY2hhbmdlIHlvdXIgbWluZCBhbmQgbGVhdmUgdGhlIHN0dWR5IGF0IGFueSB0aW1lIGJ5IGNsb3NpbmcgdGhlIHdlYiBwYWdlIHdpdGhvdXQgc3BlY2lmeWluZyByZWFzb25zIGFuZCB3aXRob3V0IGFueSBkaXNhZHZhbnRhZ2VzLgogICAgICAgIDxicj48YnI+CiAgICAgICAgICA8Yj5XaGF0IHJpc2tzIGFuZCBiZW5lZml0cyBjYW4gSSBleHBlY3Q/PC9iPiBUaGVyZSBhcmUgbm8gZm9yZXNlZWFibGUgcmlza3MgZm9yIHBhcnRpY2lwYXRpbmcgaW4gdGhpcyBzdHVkeS4KICAgICAgICA8YnI+PGJyPgogICAgICAgICAgPGI+V2lsbCBJIGJlIGNvbXBlbnNhdGVkIGZvciBwYXJ0aWNpcGF0aW5nPzwvYj4gSWYgeW91IHBhcnRpY2lwYXRlIHlvdSB3aWxsIGJlIGNvbXBlbnNhdGVkIGZvciB5b3VyIHRpbWUgZm9sbG93aW5nIHRoZSBhbW91bnQgc3BlY2lmaWVkIG9uIHByb2xpZmljLmNvLgogICAgICAgIDxicj48YnI+CiAgICAgICAgICA8Yj5XaGF0IGRhdGEgaXMgY29sbGVjdGVkIGZyb20gbWUgYW5kIGhvdyBpcyBpdCB1c2VkPzwvYj4gRHVyaW5nIHRoaXMgc3R1ZHksIHdlIHdpbGwgdHJhY2sgdGhlIHBvc2l0aW9uIG9mIHlvdXIgbW91c2Ugb24gc2NyZWVuLiBUaGUgZGF0YSBmcm9tIHRoaXMgc3R1ZHkgbWF5IGJlIHByZXNlbnRlZCBhdCBzY2llbnRpZmljIGNvbmZlcmVuY2VzIGFuZCBwdWJsaXNoZWQgaW4gc2NpZW50aWZpYyBqb3VybmFscywgYXMgd2VsbCBhcyBpbiBvbmxpbmUgcmVwb3NpdG9yaWVzLiBBbGwgZGF0YSB3aWxsIHJlbWFpbiBhbm9ueW1vdXMuIE1lbWJlcnMgb2YgdGhlIEVUSCBadXJpY2ggRXRoaWNzIENvbW1pc3Npb24gbWF5IGFjY2VzcyB0aGUgb3JpZ2luYWwgZGF0YSBmb3IgZXhhbWluYXRpb24gcHVycG9zZXMuIFN0cmljdCBjb25maWRlbnRpYWxpdHkgd2lsbCBiZSBvYnNlcnZlZCBhdCBhbnkgdGltZS4KICAgICAgICA8YnI+PGJyPgogICAgICAgICAgPGI+IFdoYXQgYXJlIG15IHJpZ2h0cyB0byBteSBwZXJzb25hbCBkYXRhPyA8L2I+IFlvdSBjYW4gcmVxdWVzdCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgcGVyc29uYWwgZGF0YSBjb2xsZWN0ZWQgZnJvbSB5b3UgYXQgYW55IHRpbWUgYW5kIHdpdGhvdXQgZ2l2aW5nIHJlYXNvbnMuIFlvdSBjYW4gYWxzbyByZXF1ZXN0IHRoYXQgaXQgYmUgcmVjdGlmaWVkLCBoYW5kZWQgb3ZlciB0byB5b3UsIGJhcnJlZCBmb3IgcHJvY2Vzc2luZyBvciBlcmFzZWQuIFRvIGRvIHNvLCBwbGVhc2UgY29udGFjdCB0aGUgcGVyc29uIGluZGljYXRlZCBiZWxvdy4KICAgICAgICA8YnI+PGJyPgogICAgICAgICAgPGI+V2hvIGZ1bmRzIHRoaXMgc3R1ZHk/PC9iPiBUaGlzIHN0dWR5IGlzIGZ1bmRlZCBieSBhbiBFVEggUG9zdGRvY3RvcmFsIEZlbGxvd3NoaXAgZ3JhbnQsIGF3YXJkZWQgdG8gRXRoYW4gV2lsY294LgogICAgICAgIDxicj48YnI+CiAgICAgICAgICA8Yj4gSG93IGFtIEkgaW5zdXJlZD8gPC9iPiBBbHRob3VnaCB0aGVyZSBhcmUgbm8gZm9yZXNlZWFibGUgcmlza3MgZm9yIHBhcnRpY2lwYXRpb24sIGFueSBhZHZlcnNlIGhlYWx0aCBlZmZlY3RzIHRoYXQgYXJlIGRpcmVjdGx5IGNhdXNlZCBieSBhIHN0dWR5IGFuZCBjYW4gYmUgZGVtb25zdHJhdGVkIHRvIGJlIGF0dHJpYnV0YWJsZSB0byBmYXVsdCBvbiB0aGUgcGFydCBvZiB0aGUgcHJvamVjdCB0ZWFtIG9yIEVUSCBadXJpY2ggYXJlIGNvdmVyZWQgYnkgRVRIJ3MgbGlhYmlsaXR5IGluc3VyYW5jZS4KICAgICAgICA8YnI+PGJyPgogICAgICAgICAgPGI+IFdobyByZXZpZXdlZCB0aGlzIHN0dWR5PyAgPC9iPiBUaGlzIHN0dWR5IHdhcyBleGFtaW5lZCBieSB0aGUgRVRIIFp1cmljaCBFdGhpY3MgQ29tbWlzc2lvbiBhcyBwcm9wb3NhbCBFSyAyMDIzLU4tMDMKCiAgICAgICAgPGJyPjxicj4KICAgICAgICAgIDxiPiBDb21wbGFpbnRzIE9mZmljZTo8L2I+IFRoZSBzZWNyZXRhcmlhdCBvZiB0aGUgRVRIIFp1cmljaCBFdGhpY3MgQ29tbWl0dGVlIGlzIGF2YWlsYWJsZSB0byBoZWxwIHlvdSB3aXRoIGNvbXBsYWludHMgaW4gY29ubmVjdGlvbiB3aXRoIHlvdXIgcGFydGljaXBhdGlvbi4gQ29udGFjdDogZXRoaWNzQHNsLmV0aHouY2ggb3IgMDA0MSA0NCA2MzIgODUgNzIuCiAgICAgICAgPGJyPjxicj4KICAgICAgICAgIDxiPiBHZW5lcmFsIENvbnRhY3Q6IDwvYj4gRXRoYW4gR290bGllYiBXaWxjb3gsIERlcGFydG1lbnQgb2YgQ29tcHV0ZXIgU2NpZW5jZSwgRVRIIFp1cmljaCwgT0FTIEsuMjAsIEJpbnptw7xobGVzdHJhc3NlIDEzLCA4MDUwIFrDvHJpY2gsIFN3aXR6ZXJsYW5kLCBldGhhbi53aWxjb3hAaW5mLmV0aHouY2ggPGJyPgogICAgICAgIDwvcD4KCiAgICAgICAgPGJyPgogICAgICAgIDxkaXYgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JleTsgcGFkZGluZzogMTBweDsiPgogICAgICAgICAgICA8Yj4gQ29uc2VudCBGb3JtIDwvYj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8YnI+CiAgICAgICAgSSwgdGhlIHBhcnRpY2lwYW50LCBjb25maXJtIGJ5IGNsaWNraW5nIHRoZSBidXR0b24gYmVsb3c6IDxicj4KICAgICAgICA8ZGl2IHN0eWxlPSJwYWRkaW5nLWxlZnQ6IDMwcHgiPiDigKIgSSBoYXZlIHJlYWQgYW5kIHVuZGVyc3Rvb2QgdGhlIHN0dWR5IGluZm9ybWF0aW9uLiBNeSBxdWVzdGlvbnMgaGF2ZSBiZWVuIGFuc3dlcmVkIGNvbXBsZXRlbHkgYW5kIHRvIG15IHNhdGlzZmFjdGlvbi4gPC9kaXY+CiAgICAgICAgPGRpdiBzdHlsZT0icGFkZGluZy1sZWZ0OiAzMHB4Ij7igKIgSSBjb21wbHkgd2l0aCB0aGUgaW5jbHVzaW9uIGFuZCBleGNsdXNpb24gY3JpdGVyaWEgZm9yIHBhcnRpY2lwYXRpb24gZGVzY3JpYmVkIGFib3ZlLiBJIGFtIGF3YXJlIG9mIHRoZSByZXF1aXJlbWVudHMgYW5kIHJlc3RyaWN0aW9ucyB0byBiZSBvYnNlcnZlZCBkdXJpbmcgdGhlIHN0dWR5LiA8L2Rpdj4KICAgICAgICA8ZGl2IHN0eWxlPSJwYWRkaW5nLWxlZnQ6IDMwcHgiPuKAoiBJIGhhdmUgaGFkIGVub3VnaCB0aW1lIHRvIGRlY2lkZSBhYm91dCBteSBwYXJ0aWNpcGF0aW9uLiA8L2Rpdj4KICAgICAgICA8ZGl2IHN0eWxlPSJwYWRkaW5nLWxlZnQ6IDMwcHgiPuKAoiBJIHBhcnRpY2lwYXRlIGluIHRoaXMgc3R1ZHkgdm9sdW50YXJpbHkgYW5kIGNvbnNlbnQgdGhhdCBteSBwZXJzb25hbCBkYXRhIGJlIHVzZWQgYXMgZGVzY3JpYmVkIGFib3ZlLjwvZGl2PgogICAgICAgIDxkaXYgc3R5bGU9InBhZGRpbmctbGVmdDogMzBweCI+4oCiIEkgdW5kZXJzdGFuZCB0aGF0IEkgY2FuIHN0b3AgcGFydGljaXBhdGluZyBhdCBhbnkgbW9tZW50LjwvZGl2PgogICAgICAgIDxicj4KICAgICAgIAogICAgICAgIDxicj4KICAgICAgICA8ZGl2IHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyZXk7IHBhZGRpbmc6IDEwcHg7Ij4KICAgICAgICAgICAgPGI+IERlbW9ncmFwaGljIEluZm9ybWF0aW9uIDwvYj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8YnI+CiAgICAgICAgICAKICAgICAgICAgPHA+UGxlYXNlIGFuc3dlciB0aGUgcXVlc3Rpb25zIGJlbG93LCBhbmQgdGhlbiBjbGljayB0aGUgYnV0dG9uIHRvIHN0YXJ0IHRoZSBwcmFjdGljZSBzZXNzaW9uLjwvcD4KICAgICAgICAgIDwhLS0gPHRkPkkgY3VycmVudGx5IGxpdmUgaW4gYSBSdXNzaWFuLXNwZWFraW5nIGNvdW50cnkuPC90ZD4KICAgICAgICAgIDx0ZD48aW5wdXQgdHlwZT0icmFkaW8iIGlkID0gInllcyIgdmFsdWU9IlllcyIgdi1tb2RlbD0iJG1hZ3BpZS5tZWFzdXJlbWVudHMuTW91c2VUeXBlIj4gWWVzPC9pbnB1dD4gPC90ZD4KICAgICAgICAgIDx0ZD48aW5wdXQgdHlwZT0icmFkaW8iIGlkID0gIm5vIiB2YWx1ZT0iTm8iIHYtbW9kZWw9IiRtYWdwaWUubWVhc3VyZW1lbnRzLk1vdXNlVHlwZSI+IE5vPC9pbnB1dD48L3RkPiAgCiAgICAgICAgICA8L3RyPiAtLT4KICAgICAgICAgIDxkaXY+CiAgICAgICAgICA8dHI+CiAgICAgICAgICBJIGFtIF9fX19fIHllYXJzIG9sZC4gCiAgICAgICAgICA8aW5wdXQgbmFtZT0iQWdlIiB0eXBlPSJudW1iZXIiIGlucHV0bW9kZT0ibnVtZXJpYyIgbWluID0gIjE4IiBjbGFzcz0ib2JsaWdhdG9yeSIgdi1tb2RlbD0iJG1hZ3BpZS5tZWFzdXJlbWVudHMuQWdlIi8+PHNwYW4gY2xhc3M9InZhbGlkaXR5Ij48L3NwYW4+CiAgICAgICAgICA8L3RyPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICAKICAgICAgICAgIDx0cj4KICAgICAgICAgIEkgY3VycmVudGx5IGxpdmUgaW4gYSBSdXNzaWFuLXNwZWFraW5nIGNvdW50cnkuICZuYnNwCiAgICAgICAgICA8c2VsZWN0IHYtbW9kZWw9IiRtYWdwaWUubWVhc3VyZW1lbnRzLlJ1c3NpYW5Db3VudHJ5Ij4gCiAgICAgICAgICAgIDxvcHRpb24gZGlzYWJsZWQgdmFsdWU9IiI+PC9vcHRpb24+CiAgICAgICAgICAgIDxvcHRpb24+WWVzPC9vcHRpb24+CiAgICAgICAgICAgIDxvcHRpb24+Tm88L29wdGlvbj4KICAgICAgICAgPC9zZWxlY3Q+CiAgICAgICAgICA8L3RyPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IHYtaWY9IgogICAgICAgICAgICAkbWFncGllLm1lYXN1cmVtZW50cy5SdXNzaWFuQ291bnRyeSA9PSAnTm8nCiAgICAgICAgICAgICI+ICAgICAgCiAgICAgICAgICAgIDx0ZD5Ib3cgbG9uZyBoYXZlIHlvdSBsaXZlZCBpbiBhIG5vbi1SdXNzaWFuLXNwZWFraW5nIGNvdW50cnk/ICZuYnNwIDwvdGQ+PHRkPjxpbnB1dCBuYW1lPSJSdXNzaWFuQ291bnRyeTIiIHR5cGU9InRleHQiIGNsYXNzPSJvYmxpZ2F0b3J5IiB2LW1vZGVsPSIkbWFncGllLm1lYXN1cmVtZW50cy5SdXNzaWFuQ291bnRyeTIiLz48L3RkPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2PgogICAgICAgICAgPHRyPgogICAgICAgICAgSSBhbSB1c2luZyBhIF9fX19fLiAmbmJzcAogICAgICAgICAgPHNlbGVjdCB2LW1vZGVsPSIkbWFncGllLm1lYXN1cmVtZW50cy5Nb3VzZVR5cGUiPiAKICAgICAgICAgICAgPG9wdGlvbiBkaXNhYmxlZCB2YWx1ZT0iIj48L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbj5Nb3VzZTwvb3B0aW9uPgogICAgICAgICAgICA8b3B0aW9uPlRyYWNrcGFkPC9vcHRpb24+CiAgICAgICAgICAgIDxvcHRpb24+T3RoZXI8L29wdGlvbj4gCiAgICAgICAgIDwvc2VsZWN0PgogICAgICAgICA8L3RyPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IHYtaWY9IgogICAgICAgICAgICAkbWFncGllLm1lYXN1cmVtZW50cy5Nb3VzZVR5cGUgPT0gJ090aGVyJwogICAgICAgICAgICAiPiAgICAgIAogICAgICAgICAgICA8dGQ+SWYgb3RoZXIsIHBsZWFzZSBzcGVjaWZ5OiAmbmJzcCAmbmJzcDwvdGQ+PHRkPjxpbnB1dCBuYW1lPSJNb3VzZVR5cGUyIiB0eXBlPSJ0ZXh0IiBjbGFzcz0ib2JsaWdhdG9yeSIgdi1tb2RlbD0iJG1hZ3BpZS5tZWFzdXJlbWVudHMuTW91c2VUeXBlMiIvPjwvdGQ+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIAogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgIE15IGRvbWluYW50IGhhbmQgaXMgX19fX18uICZuYnNwCiAgICAgICAgICA8c2VsZWN0IHYtbW9kZWw9IiRtYWdwaWUubWVhc3VyZW1lbnRzLkhhbmRlZG5lc3MiPiAKICAgICAgICAgICAgPG9wdGlvbiBkaXNhYmxlZCB2YWx1ZT0iIj48L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbj5MZWZ0PC9vcHRpb24+CiAgICAgICAgICAgIDxvcHRpb24+UmlnaHQ8L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbj5Cb3RoPC9vcHRpb24+CiAgICAgICAgIDwvc2VsZWN0PgogICAgICAgICAgICA8L3RyPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8dHI+CiAgICAgICAgICA8dGQ+UGxlYXNlIGVudGVyIHlvdXIgV29ya2VyIElEIHRvIGNvbnRpbnVlOiZuYnNwPC90ZD48dGQ+PGlucHV0IG5hbWU9IlR1cmtJRCIgdHlwZT0idGV4dCIgY2xhc3M9Im9ibGlnYXRvcnkiIHYtbW9kZWw9IiRtYWdwaWUubWVhc3VyZW1lbnRzLlN1YmplY3RJRCIvPjwvdGQ+CiAgICAgICAgICA8L3RyPgogICAgICAgICA8ZGl2IHYtaWY9IgogICAgICAgICAgICAkbWFncGllLm1lYXN1cmVtZW50cy5TdWJqZWN0SUQmJgogICAgICAgICAgICAhJG1hZ3BpZS52YWxpZGF0ZU1lYXN1cmVtZW50cy5TdWJqZWN0SUQuJGludmFsaWQgCiAgICAgICAgICAgICI+CiAgICAgICAgICA8YnI+IEJ5IGNsaWNraW5nIG9uIHRoZSBidXR0b24gYmVsb3cgeW91IGNvbnNlbnQgdG8gcGFydGljaXBhdGluZyBpbiB0aGlzIHN0dWR5OiA8YnI+PGJyPgogICAgICAgICAgPGJyIC8+CiAgICAgICAgICA8YnV0dG9uIAogICAgICAgICAgICBAY2xpY2s9IiAkbWFncGllLmFkZEV4cERhdGEoeyBTdWJqZWN0SWQ6ICRtYWdwaWUubWVhc3VyZW1lbnRzLlN1YmplY3RJRH0pOyAkbWFncGllLmFkZEV4cERhdGEoe01vdXNlVHlwZTogJG1hZ3BpZS5tZWFzdXJlbWVudHMuTW91c2VUeXBlfSk7IAogICAgICAgICAgICAkbWFncGllLmFkZEV4cERhdGEoe01vdXNlVHlwZTI6ICRtYWdwaWUubWVhc3VyZW1lbnRzLk1vdXNlVHlwZTJ9KTsgJG1hZ3BpZS5hZGRFeHBEYXRhKHtSdXNzaWFuQ291bnRyeTogJG1hZ3BpZS5tZWFzdXJlbWVudHMuUnVzc2lhbkNvdW50cnl9KTsgCiAgICAgICAgICAgICRtYWdwaWUuYWRkRXhwRGF0YSh7UnVzc2lhbkNvdW50cnkyOiAkbWFncGllLm1lYXN1cmVtZW50cy5SdXNzaWFuQ291bnRyeTJ9KTsgJG1hZ3BpZS5hZGRFeHBEYXRhKHtIYW5kZWRuZXNzOiAkbWFncGllLm1lYXN1cmVtZW50cy5IYW5kZWRuZXNzfSk7ICRtYWdwaWUubmV4dFNjcmVlbigpIj4KCiAgICAgICAgICAgIFByb2NlZWQKICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgCiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L1NjcmVlbj4KCgogICAgPEluc3RydWN0aW9uU2NyZWVuIDp0aXRsZT0iJ0luc3RydWN0aW9uJyI+CjwhLS0gCiAgICAgIDxwPlBsZWFzZSB1c2UgdGhlICJGdWxsc2NyZWVuIE1vZGUiIGZvciB0aGUgZHVyYXRpb24gb2YgdGhlIGV4cGVyaW1lbnQ6CiAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApIiBAY2xpY2s9InR1cm5PbkZ1bGxTY3JlZW4iPkZ1bGxzY3JlZW4gTW9kZTwvYT4KICAgICAgPC9wPgogLS0+CiAgICAgIDxwPkluIHRoaXMgc3R1ZHksIHlvdSB3aWxsIHJlYWQgc2hvcnQgdGV4dHMgYW5kIGFuc3dlciBxdWVzdGlvbnMgYWJvdXQgdGhlbS4gSG93ZXZlciwgdW5saWtlIGluIG5vcm1hbCByZWFkaW5nLCB0aGUgdGV4dHMgd2lsbCBiZSBibHVycmVkLiBJbiBvcmRlciB0byBicmluZyB0aGUgdGV4dCBpbnRvIGZvY3VzIG1vdmUgeW91ciBtb3VzZSBvdmVyIGl0LiBUYWtlIGFzIG11Y2ggdGltZSB0byByZWFkIHRoZSB0ZXh0IGFzIHlvdSBuZWVkIGluIG9yZGVyIHRvIHVuZGVyc3RhbmQgaXQuIFdoZW4geW91IGFyZSBkb25lIHJlYWRpbmcsIGFuc3dlciB0aGUgcXVlc3Rpb24gYXQgdGhlIGJvdHRvbSBhbmQgY2xpY2sg4oCcbmV4dOKAnSB0byBtb3ZlIG9uLjwvcD4KICAgIDwvSW5zdHJ1Y3Rpb25TY3JlZW4+CgogICAgPFNjcmVlbiA6dGl0bGU9IidEZW1vZ3JhcGhpY3MnIiBjbGFzcz0iaW5zdHJ1Y3Rpb25zIiA6dmFsaWRhdGlvbnM9InsKICAgICAgICBTdWJqZWN0SUQ6IHsKICAgICAgICAgIG1pbkxlbmd0aDogJG1hZ3BpZS52Lm1pbkxlbmd0aCgyKQogICAgICAgIH0KICAgICAgfSI+CiAgICAgICAgPCEtLSA8V2VsY29tZVNjcmVlbiAvPiAtLT4KICAgICAgICA8ZGl2IHN0eWxlPSJ3aWR0aDogNDBlbTsgbWFyZ2luOiBhdXRvOyI+CgogICAgICAgIDxkaXYgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JleTsgcGFkZGluZzogMTBweDsiPgogICAgICAgICAgICA8Yj4gUFJBQ1RJQ0UgVEVYVCA8L2I+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPHA+CiAgICAgICAgICBCZWZvcmUgd2UgbW92ZSBvbiwgd2Ugd291bGQgbGlrZSB0byBhc2sgeW91IHNvbWUgcXVlc3Rpb25zIGFib3V0IHlvdXJzZWxmLgogICAgICAgIDxicj48YnI+CiAgICAgICAgPC9wPgogICAgICAgCiAgICAgICAgPGJyPgogICAgICAgIDxkaXYgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6IGxpZ2h0Z3JleTsgcGFkZGluZzogMTBweDsiPgogICAgICAgICAgICA8Yj4gRGVtb2dyYXBoaWMgSW5mb3JtYXRpb24gPC9iPgogICAgICAgIDwvZGl2PgogICAgICAgIDxicj4KICAgICAgICAgIAogICAgICAgICA8cD5QbGVhc2UgYW5zd2VyIHRoZSBxdWVzdGlvbnMgYmVsb3csIGFuZCB0aGVuIGNsaWNrIHRoZSBidXR0b24gdG8gc3RhcnQgdGhlIHByYWN0aWNlIHNlc3Npb24uPC9wPgogICAgICAgICAgPCEtLSA8dGQ+SSBjdXJyZW50bHkgbGl2ZSBpbiBhIFJ1c3NpYW4tc3BlYWtpbmcgY291bnRyeS48L3RkPgogICAgICAgICAgPHRkPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQgPSAieWVzIiB2YWx1ZT0iWWVzIiB2LW1vZGVsPSIkbWFncGllLm1lYXN1cmVtZW50cy5Nb3VzZVR5cGUiPiBZZXM8L2lucHV0PiA8L3RkPgogICAgICAgICAgPHRkPjxpbnB1dCB0eXBlPSJyYWRpbyIgaWQgPSAibm8iIHZhbHVlPSJObyIgdi1tb2RlbD0iJG1hZ3BpZS5tZWFzdXJlbWVudHMuTW91c2VUeXBlIj4gTm88L2lucHV0PjwvdGQ+ICAKICAgICAgICAgIDwvdHI+IC0tPgogICAgICAgICAgPGRpdj4KICAgICAgICAgIDx0cj4KICAgICAgICAgIEkgYW0gX19fX18geWVhcnMgb2xkLiAKICAgICAgICAgIDxpbnB1dCBuYW1lPSJBZ2UiIHR5cGU9Im51bWJlciIgaW5wdXRtb2RlPSJudW1lcmljIiBtaW4gPSAiMTgiIGNsYXNzPSJvYmxpZ2F0b3J5IiB2LW1vZGVsPSIkbWFncGllLm1lYXN1cmVtZW50cy5BZ2UiLz48c3BhbiBjbGFzcz0idmFsaWRpdHkiPjwvc3Bhbj4KICAgICAgICAgIDwvdHI+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIAogICAgICAgICAgPHRyPgogICAgICAgICAgSSBjdXJyZW50bHkgbGl2ZSBpbiBhIFJ1c3NpYW4tc3BlYWtpbmcgY291bnRyeS4gJm5ic3AKICAgICAgICAgIDxzZWxlY3Qgdi1tb2RlbD0iJG1hZ3BpZS5tZWFzdXJlbWVudHMuUnVzc2lhbkNvdW50cnkiPiAKICAgICAgICAgICAgPG9wdGlvbiBkaXNhYmxlZCB2YWx1ZT0iIj48L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbj5ZZXM8L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbj5Obzwvb3B0aW9uPgogICAgICAgICA8L3NlbGVjdD4KICAgICAgICAgIDwvdHI+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgdi1pZj0iCiAgICAgICAgICAgICRtYWdwaWUubWVhc3VyZW1lbnRzLlJ1c3NpYW5Db3VudHJ5ID09ICdObycKICAgICAgICAgICAgIj4gICAgICAKICAgICAgICAgICAgPHRkPkhvdyBsb25nIGhhdmUgeW91IGxpdmVkIGluIGEgbm9uLVJ1c3NpYW4tc3BlYWtpbmcgY291bnRyeT8gJm5ic3AgPC90ZD48dGQ+PGlucHV0IG5hbWU9IlJ1c3NpYW5Db3VudHJ5MiIgdHlwZT0idGV4dCIgY2xhc3M9Im9ibGlnYXRvcnkiIHYtbW9kZWw9IiRtYWdwaWUubWVhc3VyZW1lbnRzLlJ1c3NpYW5Db3VudHJ5MiIvPjwvdGQ+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXY+CiAgICAgICAgICA8dHI+CiAgICAgICAgICBJIGFtIHVzaW5nIGEgX19fX18uICZuYnNwCiAgICAgICAgICA8c2VsZWN0IHYtbW9kZWw9IiRtYWdwaWUubWVhc3VyZW1lbnRzLk1vdXNlVHlwZSI+IAogICAgICAgICAgICA8b3B0aW9uIGRpc2FibGVkIHZhbHVlPSIiPjwvb3B0aW9uPgogICAgICAgICAgICA8b3B0aW9uPk1vdXNlPC9vcHRpb24+CiAgICAgICAgICAgIDxvcHRpb24+VHJhY2twYWQ8L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbj5PdGhlcjwvb3B0aW9uPiAKICAgICAgICAgPC9zZWxlY3Q+CiAgICAgICAgIDwvdHI+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgdi1pZj0iCiAgICAgICAgICAgICRtYWdwaWUubWVhc3VyZW1lbnRzLk1vdXNlVHlwZSA9PSAnT3RoZXInCiAgICAgICAgICAgICI+ICAgICAgCiAgICAgICAgICAgIDx0ZD5JZiBvdGhlciwgcGxlYXNlIHNwZWNpZnk6ICZuYnNwICZuYnNwPC90ZD48dGQ+PGlucHV0IG5hbWU9Ik1vdXNlVHlwZTIiIHR5cGU9InRleHQiIGNsYXNzPSJvYmxpZ2F0b3J5IiB2LW1vZGVsPSIkbWFncGllLm1lYXN1cmVtZW50cy5Nb3VzZVR5cGUyIi8+PC90ZD4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgCiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8dHI+CiAgICAgICAgICAgICAgTXkgZG9taW5hbnQgaGFuZCBpcyBfX19fXy4gJm5ic3AKICAgICAgICAgIDxzZWxlY3Qgdi1tb2RlbD0iJG1hZ3BpZS5tZWFzdXJlbWVudHMuSGFuZGVkbmVzcyI+IAogICAgICAgICAgICA8b3B0aW9uIGRpc2FibGVkIHZhbHVlPSIiPjwvb3B0aW9uPgogICAgICAgICAgICA8b3B0aW9uPkxlZnQ8L29wdGlvbj4KICAgICAgICAgICAgPG9wdGlvbj5SaWdodDwvb3B0aW9uPgogICAgICAgICAgICA8b3B0aW9uPkJvdGg8L29wdGlvbj4KICAgICAgICAgPC9zZWxlY3Q+CiAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDx0cj4KICAgICAgICAgIDx0ZD5QbGVhc2UgZW50ZXIgeW91ciBXb3JrZXIgSUQgdG8gY29udGludWU6Jm5ic3A8L3RkPjx0ZD48aW5wdXQgbmFtZT0iVHVya0lEIiB0eXBlPSJ0ZXh0IiBjbGFzcz0ib2JsaWdhdG9yeSIgdi1tb2RlbD0iJG1hZ3BpZS5tZWFzdXJlbWVudHMuU3ViamVjdElEIi8+PC90ZD4KICAgICAgICAgIDwvdHI+CiAgICAgICAgIDxkaXYgdi1pZj0iCiAgICAgICAgICAgICRtYWdwaWUubWVhc3VyZW1lbnRzLlN1YmplY3RJRCYmCiAgICAgICAgICAgICEkbWFncGllLnZhbGlkYXRlTWVhc3VyZW1lbnRzLlN1YmplY3RJRC4kaW52YWxpZCAKICAgICAgICAgICAgIj4KICAgICAgICAgIDxicj4gQnkgY2xpY2tpbmcgb24gdGhlIGJ1dHRvbiBiZWxvdyB5b3UgY29uc2VudCB0byBwYXJ0aWNpcGF0aW5nIGluIHRoaXMgc3R1ZHk6IDxicj48YnI+CiAgICAgICAgICA8YnIgLz4KICAgICAgICAgIDxidXR0b24gCiAgICAgICAgICAgIEBjbGljaz0iICRtYWdwaWUuYWRkRXhwRGF0YSh7IFN1YmplY3RJZDogJG1hZ3BpZS5tZWFzdXJlbWVudHMuU3ViamVjdElEfSk7ICRtYWdwaWUuYWRkRXhwRGF0YSh7TW91c2VUeXBlOiAkbWFncGllLm1lYXN1cmVtZW50cy5Nb3VzZVR5cGV9KTsgCiAgICAgICAgICAgICRtYWdwaWUuYWRkRXhwRGF0YSh7TW91c2VUeXBlMjogJG1hZ3BpZS5tZWFzdXJlbWVudHMuTW91c2VUeXBlMn0pOyAkbWFncGllLmFkZEV4cERhdGEoe1J1c3NpYW5Db3VudHJ5OiAkbWFncGllLm1lYXN1cmVtZW50cy5SdXNzaWFuQ291bnRyeX0pOyAKICAgICAgICAgICAgJG1hZ3BpZS5hZGRFeHBEYXRhKHtSdXNzaWFuQ291bnRyeTI6ICRtYWdwaWUubWVhc3VyZW1lbnRzLlJ1c3NpYW5Db3VudHJ5Mn0pOyAkbWFncGllLmFkZEV4cERhdGEoe0hhbmRlZG5lc3M6ICRtYWdwaWUubWVhc3VyZW1lbnRzLkhhbmRlZG5lc3N9KTsgJG1hZ3BpZS5uZXh0U2NyZWVuKCkiPgoKICAgICAgICAgICAgU3RhcnQgcHJhY3RpY2UKICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgCiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L1NjcmVlbj4KCiAgICA8dGVtcGxhdGUgdi1mb3I9Iih0cmlhbCwgaSkgb2YgcHJhY3RpY2VfdHJpYWxzIj4KICAgICAgPFNjcmVlbiA6a2V5PSJpIiBjbGFzcz0ibWFpbl9zY3JlZW4iIDpwcm9ncmVzcz0iaSAvIHByYWN0aWNlX3RyaWFscy5sZW5ndGgiPgogICAgICAgIDxTbGlkZT4KICAgICAgICAgIDxmb3JtPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBjbGFzcz0iaXRlbV9pZCIgOnZhbHVlPSJ0cmlhbC5pdGVtX2lkIj4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgY2xhc3M9ImV4cGVyaW1lbnRfaWQiIDp2YWx1ZT0idHJpYWwuZXhwZXJpbWVudF9pZCI+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGNsYXNzPSJjb25kaXRpb25faWQiIDp2YWx1ZT0idHJpYWwuY29uZGl0aW9uX2lkIj4KICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgIDxkaXYgY2xhc3M9Im92YWwtY3Vyc29yIj48L2Rpdj4KICAgICAgICAgIDx0ZW1wbGF0ZT4KICAgICAgICAgICAgPGRpdiB2LWlmPSJzaG93Rmlyc3REaXYiIGNsYXNzPSJyZWFkaW5nVGV4dCIgQG1vdXNlbW92ZT0ibW92ZUN1cnNvciIgQG1vdXNlbGVhdmU9ImNoYW5nZUJhY2siPgogICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWZvcj0iKHdvcmQsIGluZGV4KSBvZiB0cmlhbC50ZXh0LnNwbGl0KCcgJykiPgogICAgICAgICAgICAgICAgPHNwYW4gOmtleT0iaW5kZXgiIDpkYXRhLWluZGV4PSJpbmRleCIgPgogICAgICAgICAgICAgICAgICB7eyB3b3JkIH19CiAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJsdXJyeS1sYXllciIgc3R5bGU9Im9wYWNpdHk6IDAuMzsgZmlsdGVyOiBibHVyKDMuNXB4KTsgdHJhbnNpdGlvbjogYWxsIDAuM3MgbGluZWFyIDBzOyI+IAogICAgICAgICAgICAgIHt7dHJpYWwudGV4dH19CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDxidXR0b24gdi1pZj0ic2hvd0ZpcnN0RGl2IiBzdHlsZT0gImJvdHRvbTo0MCU7IHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIiBAY2xpY2s9InRyaWFsLnF1ZXN0aW9uICE9PSBudWxsID8gdG9nZ2xlRGl2cygpOiBzYXZlQW5kRGlzYWJsZSgpIiA6ZGlzYWJsZWQ9IiFoYXNSZWFkIj4KICAgICAgICAgICAge3sgdHJpYWwucXVlc3Rpb24gIT09IG51bGwgPyAnQW5zd2VyIFF1ZXN0aW9uJyA6ICdOZXh0IFRleHQnIH19CiAgICAgICAgICA8L2J1dHRvbj4KCiAgICAgICAgICA8ZGl2IHYtZWxzZSBzdHlsZSA9ICJwb3NpdGlvbjphYnNvbHV0ZTsgYm90dG9tOjE1JTsgdGV4dC1hbGlnbjogY2VudGVyOyB3aWR0aDogMTAwJTsgbWluLXdpZHRoOiAtd2Via2l0LWZpbGwtYXZhaWxhYmxlOyIgPgogICAgICAgICAgICA8dGVtcGxhdGU+CiAgICAgICAgICAgICAgPGZvcm0+CiAgICAgICAgICAgICAgICA8IS0tIGNvbXByZWhlbnNpb24gcXVlc3Rpb25zIGFuZCB0aGUgcmVzcG9uc2Ugb3B0aW9ucyAtLT4KICAgICAgICAgICAgICAgIDwhLS0gPGRpdj57eyB0cmlhbC5xdWVzdGlvbiA/IHRyaWFsLnF1ZXN0aW9uLnJlcGxhY2UoLyA/WyJdKy9nLCAnJykgOiAnJyB9fTwvZGl2PiAtLT4KICAgICAgICAgICAgICAgIDxkaXY+e3sgdHJpYWwucXVlc3Rpb24gfX08L2Rpdj4KICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWZvcj0nKHdvcmQsIGluZGV4KSBvZiB0cmlhbC5yZXNwb25zZV9vcHRpb25zJz4KICAgICAgICAgICAgICAgICAgPGlucHV0IDppZD0iJ29wdF8nK2luZGV4IiB0eXBlPSJyYWRpbyIgOnZhbHVlPSJ3b3JkIiBuYW1lPSJvcHQiIHYtbW9kZWw9IiRtYWdwaWUubWVhc3VyZW1lbnRzLnJlc3BvbnNlIi8+e3sgd29yZCB9fTxici8+CiAgICAgICAgICAgICAgICAgICAgPCEtLSA8bGFiZWwgOmZvcj0iJ29wdF8nK2luZGV4Ij4ge3sgd29yZCB9fSZuYnNwPC9sYWJlbD4gLS0+CiAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgIDwvZm9ybT4KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgCiAgICAgICAgICA8YnV0dG9uIHYtaWY9IiRtYWdwaWUubWVhc3VyZW1lbnRzLnJlc3BvbnNlIiBzdHlsZT0idHJhbnNmb3JtOiB0cmFuc2xhdGUoLTUwJSwgLTUwJSkiIEBjbGljaz0idG9nZ2xlRGl2cygpOyAkbWFncGllLnNhdmVBbmROZXh0U2NyZWVuKCkiPgogICAgICAgICAgICBOZXh0CiAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L1NsaWRlPgogICAgICA8L1NjcmVlbj4KICAgIDwvdGVtcGxhdGU+CiAgICAKICAgIDxJbnN0cnVjdGlvblNjcmVlbiA6dGl0bGU9IidFbmQgb2YgcHJhY3RpY2Ugc2Vzc2lvbiciPgo8IS0tIAogICAgICA8cD5QbGVhc2UgdXNlIHRoZSAiRnVsbHNjcmVlbiBNb2RlIiBmb3IgdGhlIGR1cmF0aW9uIG9mIHRoZSBleHBlcmltZW50OgogICAgICAgIDxhIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIgQGNsaWNrPSJ0dXJuT25GdWxsU2NyZWVuIj5GdWxsc2NyZWVuIE1vZGU8L2E+CiAgICAgIDwvcD4KIC0tPgogICAgICA8cD5QcmFjdGljZSBzZXNzaW9uIGVuZGVkIS4geW91IHdpbGwgcmVhZCBzaG9ydCB0ZXh0cyBhbmQgYW5zd2VyIHF1ZXN0aW9ucyBhYm91dCB0aGVtLiBIb3dldmVyLCB1bmxpa2UgaW4gbm9ybWFsIHJlYWRpbmcsIHRoZSB0ZXh0cyB3aWxsIGJlIGJsdXJyZWQuIEluIG9yZGVyIHRvIGJyaW5nIHRoZSB0ZXh0IGludG8gZm9jdXMgbW92ZSB5b3VyIG1vdXNlIG92ZXIgaXQuIFRha2UgYXMgbXVjaCB0aW1lIHRvIHJlYWQgdGhlIHRleHQgYXMgeW91IG5lZWQgaW4gb3JkZXIgdG8gdW5kZXJzdGFuZCBpdC4gV2hlbiB5b3UgYXJlIGRvbmUgcmVhZGluZywgYW5zd2VyIHRoZSBxdWVzdGlvbiBhdCB0aGUgYm90dG9tIGFuZCBjbGljayDigJxuZXh04oCdIHRvIG1vdmUgb24uPC9wPgogICAgPC9JbnN0cnVjdGlvblNjcmVlbj4KCgogICAgPHRlbXBsYXRlIHYtZm9yPSIodHJpYWwsIGkpIG9mIHRyaWFscyI+CiAgICAgIDxTY3JlZW4gOmtleT0iaSIgY2xhc3M9Im1haW5fc2NyZWVuIiA6cHJvZ3Jlc3M9ImkgLyB0cmlhbHMubGVuZ3RoIj4KICAgICAgICA8U2xpZGU+CiAgICAgICAgICA8Zm9ybT4KICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgY2xhc3M9Iml0ZW1faWQiIDp2YWx1ZT0idHJpYWwuaXRlbV9pZCI+CiAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIGNsYXNzPSJleHBlcmltZW50X2lkIiA6dmFsdWU9InRyaWFsLmV4cGVyaW1lbnRfaWQiPgogICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBjbGFzcz0iY29uZGl0aW9uX2lkIiA6dmFsdWU9InRyaWFsLmNvbmRpdGlvbl9pZCI+CiAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJvdmFsLWN1cnNvciI+PC9kaXY+CiAgICAgICAgICA8dGVtcGxhdGU+CiAgICAgICAgICAgIDxkaXYgdi1pZj0ic2hvd0ZpcnN0RGl2IiBjbGFzcz0icmVhZGluZ1RleHQiIEBtb3VzZW1vdmU9Im1vdmVDdXJzb3IiIEBtb3VzZWxlYXZlPSJjaGFuZ2VCYWNrIj4KICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1mb3I9Iih3b3JkLCBpbmRleCkgb2YgdHJpYWwudGV4dC5zcGxpdCgnICcpIj4KICAgICAgICAgICAgICAgIDxzcGFuIDprZXk9ImluZGV4IiA6ZGF0YS1pbmRleD0iaW5kZXgiID4KICAgICAgICAgICAgICAgICAge3sgd29yZCB9fQogICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJibHVycnktbGF5ZXIiIHN0eWxlPSJvcGFjaXR5OiAwLjM7IGZpbHRlcjogYmx1cigzLjVweCk7IHRyYW5zaXRpb246IGFsbCAwLjNzIGxpbmVhciAwczsiPiAKICAgICAgICAgICAgICB7e3RyaWFsLnRleHR9fQogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8YnV0dG9uIHYtaWY9InNob3dGaXJzdERpdiIgc3R5bGU9ICJib3R0b206NDAlOyB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKSIgQGNsaWNrPSJ0cmlhbC5xdWVzdGlvbiAhPT0gbnVsbCA/IHRvZ2dsZURpdnMoKTogc2F2ZUFuZERpc2FibGUoKSIgOmRpc2FibGVkPSIhaGFzUmVhZCI+CiAgICAgICAgICAgIHt7IHRyaWFsLnF1ZXN0aW9uICE9PSBudWxsID8gJ0Fuc3dlciBRdWVzdGlvbicgOiAnTmV4dCBUZXh0JyB9fQogICAgICAgICAgPC9idXR0b24+CgogICAgICAgICAgPGRpdiB2LWVsc2Ugc3R5bGUgPSAicG9zaXRpb246YWJzb2x1dGU7IGJvdHRvbToxNSU7IHRleHQtYWxpZ246IGNlbnRlcjsgd2lkdGg6IDEwMCU7IG1pbi13aWR0aDogLXdlYmtpdC1maWxsLWF2YWlsYWJsZTsiID4KICAgICAgICAgICAgPHRlbXBsYXRlPgogICAgICAgICAgICAgIDxmb3JtPgogICAgICAgICAgICAgICAgPCEtLSBjb21wcmVoZW5zaW9uIHF1ZXN0aW9ucyBhbmQgdGhlIHJlc3BvbnNlIG9wdGlvbnMgLS0+CiAgICAgICAgICAgICAgICA8IS0tIDxkaXY+e3sgdHJpYWwucXVlc3Rpb24gPyB0cmlhbC5xdWVzdGlvbi5yZXBsYWNlKC8gP1siXSsvZywgJycpIDogJycgfX08L2Rpdj4gLS0+CiAgICAgICAgICAgICAgICA8ZGl2Pnt7IHRyaWFsLnF1ZXN0aW9uIH19PC9kaXY+CiAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1mb3I9Jyh3b3JkLCBpbmRleCkgb2YgdHJpYWwucmVzcG9uc2Vfb3B0aW9ucyc+CiAgICAgICAgICAgICAgICAgIDxpbnB1dCA6aWQ9IidvcHRfJytpbmRleCIgdHlwZT0icmFkaW8iIDp2YWx1ZT0id29yZCIgbmFtZT0ib3B0IiB2LW1vZGVsPSIkbWFncGllLm1lYXN1cmVtZW50cy5yZXNwb25zZSIvPnt7IHdvcmQgfX08YnIvPgogICAgICAgICAgICAgICAgICAgIDwhLS0gPGxhYmVsIDpmb3I9IidvcHRfJytpbmRleCI+IHt7IHdvcmQgfX0mbmJzcDwvbGFiZWw+IC0tPgogICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIAogICAgICAgICAgPGJ1dHRvbiB2LWlmPSIkbWFncGllLm1lYXN1cmVtZW50cy5yZXNwb25zZSIgc3R5bGU9InRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpIiBAY2xpY2s9InRvZ2dsZURpdnMoKTsgJG1hZ3BpZS5zYXZlQW5kTmV4dFNjcmVlbigpIj4KICAgICAgICAgICAgTmV4dAogICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9TbGlkZT4KICAgICAgPC9TY3JlZW4+CiAgICA8L3RlbXBsYXRlPgogICAgPFN1Ym1pdFJlc3VsdHNTY3JlZW4gLz4KICA8L0V4cGVyaW1lbnQ+Cg=="},null]}