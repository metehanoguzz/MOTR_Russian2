{"remainingRequest":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/trial_screens/MazeScreen.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/trial_screens/MazeScreen.vue","mtime":1697083069027},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MoTR/run_motr_in_magpie/attachment/node_modules/cache-loader/dist/cjs.js","mtime":1697083066270},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js","mtime":1697083068088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBSZWNvcmQgZnJvbSAnLi4vaGVscGVycy9SZWNvcmQnOwppbXBvcnQgTGlmZWN5Y2xlU2NyZWVuIGZyb20gJy4uL3NjcmVlbnMvTGlmZWN5Y2xlU2NyZWVuJzsKaW1wb3J0IE1hemVJbnB1dCBmcm9tICcuLi9pbnB1dHMvTWF6ZUlucHV0JzsKCi8qKgogKiBJbmhlcml0cyBmcm9tIExpZmVjeWNsZVNjcmVlbgogKgogKiAqKlNjcmVlbiBNZWFzdXJlbWVudHMqKgogKgogKiB8TWVhc3VyZW1lbnR8VHlwZXxEZXNjcmlwdGlvbnwKICogfC0tfC0tLXwtLS18CiAqIHxyZXNwb25zZVRpbWV8aW50fFRpbWUgYmV0d2VlbiBkaXNwbGF5IG9mIHRoaXMgc2NyZWVuIHVudGlsIHRoZSBzY3JlZW4gaXMgbGVmdHwKICogfHJlc3BvbnNlVGltZW91dHxib29sZWFufFdoZXRoZXIgdGhlIHJlc3BvbnNlIHRpbWUgbGltaXQgd2FzIHJlYWNoZWR8CiAqIHxxdWQgKihvcHRpb25hbCkqfHN0cmluZ3x8CiAqIHxwYXVzZVRpbWUgKihvcHRpb25hbCkqfGludHx8CiAqIHxmaXhhdGlvblRpbWUgKihvcHRpb25hbCkqfGludHx8CiAqIHxzdGltdWx1c1RpbWUgKihvcHRpb25hbCkqfGludHx8CiAqIHxyZXNwb25zZVRpbWVMaW1pdCAqKG9wdGlvbmFsKSp8aW50fFRoZSByZXNwb25zZSB0aW1lIGxpbWl0fAogKiB8ZmVlZGJhY2tUaW1lICoob3B0aW9uYWwpKnxpbnR8fAogKiB8cXVlc3Rpb258c3RyaW5nfHwKICogfHJlc3BvbnNlc3xhcnJheXxUaGUgc2VsZWN0ZWQgcmVzcG9uc2VzfAogKiB8dGFyZ2V0X3Bvc2l0aW9uc3xhcnJheXxUaGUgbGlzdCBvZiBwb3NpdGlvbnMgb2YgdGhlIHRhcmdldCB3b3JkcyBmb3IgZWFjaCBjaG9pY2UuIEVpdGhlciAoJ2xlZnQnIG9yICdyaWdodCcpfAogKiB8cmVzcG9uc2VfdGltZXN8YXJyYXl8VGhlIHJlc3BvbnNlIHRpbWVzIHBlciBzZWxlY3RhYmxlIG9wdGlvbnwKICogfG1hemVUaW1lTGltaXR8aW50fFRoZSBtYXplIHRpbWUgbGltaXR8CiAqIHxtYXplX3RpbWVvdXR8Ym9vbGVhbnxXaGV0aGVyIHRoZSBtYXplIHRpbWUgbGltaXQgd2FzIHJlYWNoZWR8CiAqIHxjb3JyZWN0fGJvb2xlYW58V2hldGhlciBhbGwgcmVzcG9uc2VzIHdlcmUgY29ycmVjdHwKICoKICovCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnTWF6ZVNjcmVlbicsCiAgY29tcG9uZW50czogewogICAgTGlmZWN5Y2xlU2NyZWVuLAogICAgTWF6ZUlucHV0LAogICAgUmVjb3JkCiAgfSwKICBleHRlbmRzOiBMaWZlY3ljbGVTY3JlZW4sCiAgcHJvcHM6IHsKICAgIC8qKgogICAgICogQSBxdWVzdGlvbgogICAgICovCiAgICBxdWVzdGlvbjogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfSwKICAgIC8qKgogICAgICogVGFyZ2V0IGNodW5rcwogICAgICovCiAgICB0YXJnZXRzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICByZXF1aXJlZDogdHJ1ZQogICAgfSwKICAgIC8qKgogICAgICogQ29tcGV0aXRvciBjaHVua3MKICAgICAqLwogICAgY29tcGV0aXRvcnM6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgLyoqCiAgICAgKiBUaW1lIGluIG1pbGlzZWNvbmRzIHRoZSBwYXJ0aWNpcGFudCBoYXMgdG8gc2VsZWN0IHRoZSBpbmRpdmlkdWFsIHdvcmRzOyBgLTFgIGZvciBubyB0aW1lIGxpbWl0CiAgICAgKi8KICAgIG1hemVUaW1lTGltaXQ6IHsKICAgICAgdHlwZTogTnVtYmVyLAogICAgICBkZWZhdWx0OiAtMQogICAgfSwKICAgIC8qKgogICAgICogVGhlIGtleWJvYXJkIGtleSB0byBwcmVzcyBmb3IgdGhlIGxlZnQgY29udGludWF0aW9uCiAgICAgKi8KICAgIGxlZnRLZXk6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnZicKICAgIH0sCiAgICAvKioKICAgICAqIFRoZSBrZXlib2FyZCBrZXkgdG8gcHJlc3MgZm9yIHRoZSByaWdodCBjb250aW51YXRpb24KICAgICAqLwogICAgcmlnaHRLZXk6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnaicKICAgIH0sCiAgICBwcm9ncmVzczogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IHVuZGVmaW5lZAogICAgfQogIH0KfTsK"},{"version":3,"sources":["MazeScreen.vue"],"names":[],"mappings":";AAgEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"MazeScreen.vue","sourceRoot":"node_modules/magpie-base/src/components/trial_screens","sourcesContent":["<docs>\nThis is a pre-built maze task screen.\n\n```vue\n<Experiment>\n  <MazeScreen\n      question=\"Are fries healthy?\"\n      :targets=\"['Fries', 'are', 'very', 'healthy', 'indeed.']\"\n      :competitors=\"['xxx-xxx', 'can', 'usually', 'quite', 'yummy']\">\n    <template #stimulus>\n      <img src=\"img/fries.jpg\" />\n    </template>\n  </MazeScreen>\n\n  <DebugResultsScreen />\n\n</Experiment>\n```\n</docs>\n\n<template>\n  <!-- pass down props -->\n  <LifecycleScreen v-bind=\"{ ...$attrs, ...$props }\">\n    <!-- pass down slots -->\n    <template #fixation>\n      <slot name=\"fixation\"><FixationCross /></slot>\n    </template>\n    <template #stimulus>\n      <slot name=\"stimulus\"></slot>\n    </template>\n\n    <!-- Maze task -->\n    <template #task>\n      <Record\n        :data=\"{\n          question,\n          targets,\n          competitors,\n          leftKey,\n          rightKey,\n          mazeTimeLimit\n        }\"\n      />\n      <p v-if=\"question\" v-text=\"question\"></p>\n      <MazeInput\n        :targets=\"targets\"\n        :competitors=\"competitors\"\n        :response-time-limit=\"mazeTimeLimit\"\n        :response-times.sync=\"$magpie.measurements.times\"\n        :target-positions.sync=\"$magpie.measurements.target_positions\"\n        :responses.sync=\"$magpie.measurements.responses\"\n        :timeout.sync=\"$magpie.measurements.maze_timeout\"\n        :correct.sync=\"$magpie.measurements.correct\"\n        @end=\"nextAfterResponse\"\n      />\n    </template>\n\n    <template #feedback>\n      <slot name=\"feedback\"></slot>\n    </template>\n  </LifecycleScreen>\n</template>\n\n<script>\nimport Record from '../helpers/Record';\nimport LifecycleScreen from '../screens/LifecycleScreen';\nimport MazeInput from '../inputs/MazeInput';\n\n/**\n * Inherits from LifecycleScreen\n *\n * **Screen Measurements**\n *\n * |Measurement|Type|Description|\n * |--|---|---|\n * |responseTime|int|Time between display of this screen until the screen is left|\n * |responseTimeout|boolean|Whether the response time limit was reached|\n * |qud *(optional)*|string||\n * |pauseTime *(optional)*|int||\n * |fixationTime *(optional)*|int||\n * |stimulusTime *(optional)*|int||\n * |responseTimeLimit *(optional)*|int|The response time limit|\n * |feedbackTime *(optional)*|int||\n * |question|string||\n * |responses|array|The selected responses|\n * |target_positions|array|The list of positions of the target words for each choice. Either ('left' or 'right')|\n * |response_times|array|The response times per selectable option|\n * |mazeTimeLimit|int|The maze time limit|\n * |maze_timeout|boolean|Whether the maze time limit was reached|\n * |correct|boolean|Whether all responses were correct|\n *\n */\nexport default {\n  name: 'MazeScreen',\n  components: {\n    LifecycleScreen,\n    MazeInput,\n    Record\n  },\n  extends: LifecycleScreen,\n  props: {\n    /**\n     * A question\n     */\n    question: {\n      type: String,\n      default: undefined\n    },\n    /**\n     * Target chunks\n     */\n    targets: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Competitor chunks\n     */\n    competitors: {\n      type: Array,\n      required: true\n    },\n    /**\n     * Time in miliseconds the participant has to select the individual words; `-1` for no time limit\n     */\n    mazeTimeLimit: {\n      type: Number,\n      default: -1\n    },\n    /**\n     * The keyboard key to press for the left continuation\n     */\n    leftKey: {\n      type: String,\n      default: 'f'\n    },\n    /**\n     * The keyboard key to press for the right continuation\n     */\n    rightKey: {\n      type: String,\n      default: 'j'\n    },\n    progress: {\n      type: Number,\n      default: undefined\n    }\n  }\n};\n</script>\n"]}]}