{"remainingRequest":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/helpers/Record.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/magpie-base/src/components/helpers/Record.vue","mtime":1697083069069},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/cache-loader/dist/cjs.js","mtime":1697083066270},{"path":"/Users/metehanoguzz/Desktop/MT_Colab/MoTR_Russ/MOTR_Russian2/MoTR/run_motr_in_magpie/attachment/node_modules/vue-loader/lib/index.js","mtime":1697083068088}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUmVjb3JkJywKICBwcm9wczogewogICAgLyoqCiAgICAgKiBUaGUgZGF0YSB5b3Ugd2FudCB0byBhZGQKICAgICAqLwogICAgZGF0YTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgLyoqCiAgICAgKiBJZiB5b3Ugc2V0IHRoZSBnbG9iYWwgcHJvcCwgdGhlIGRhdGEgd2lsbCBiZSBhZGRlZCB0byB0aGUgZ2xvYmFsIGV4cGVyaW1lbnQgbWVhc3VyZW1lbnRzIGluc3RlYWQgb2Ygb25seSB0byB0aGUgY3VycmVudAogICAgICogdHJpYWwKICAgICAqLwogICAgZ2xvYmFsOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9CiAgfSwKICBtb3VudGVkKCkgewogICAgaWYgKHRoaXMuZ2xvYmFsKSB7CiAgICAgIHRoaXMuJG1hZ3BpZS5hZGRFeHBEYXRhKHRoaXMuZGF0YSk7CiAgICB9IGVsc2UgewogICAgICBPYmplY3Qua2V5cyh0aGlzLmRhdGEpLmZvckVhY2goKGtleSkgPT4gewogICAgICAgIGlmICh0eXBlb2YgdGhpcy5kYXRhW2tleV0gIT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgICBWdWUuc2V0KHRoaXMuJG1hZ3BpZS5tZWFzdXJlbWVudHMsIGtleSwgdGhpcy5kYXRhW2tleV0pOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["Record.vue"],"names":[],"mappings":";AA4BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Record.vue","sourceRoot":"node_modules/magpie-base/src/components/helpers","sourcesContent":["<docs>\nRecord allows you to easily add arbitrary data to your measurements:\n```vue\n<Experiment>\n\n    <template v-for=\"(task, i) in [{foo: 'bar'}, {foo: 'baz'}]\">\n      <Screen :key=\"i\">\n\n        <Slide>\n          Slide 1<br />\n          <Record :data=\"task\" />\n          <button @click=\"$magpie.nextSlide()\">Next slide</button>\n        </Slide>\n\n        <Slide>\n          Slide 2<br />\n          <button @click=\"$magpie.saveAndNextScreen()\">next</button>\n        </Slide>\n\n      </Screen>\n    </template>\n\n    <DebugResultsScreen />\n</Experiment>\n```\n</docs>\n<template><span /></template>\n<script>\nimport Vue from 'vue';\n\nexport default {\n  name: 'Record',\n  props: {\n    /**\n     * The data you want to add\n     */\n    data: {\n      type: Object,\n      required: true\n    },\n    /**\n     * If you set the global prop, the data will be added to the global experiment measurements instead of only to the current\n     * trial\n     */\n    global: {\n      type: Boolean,\n      default: false\n    }\n  },\n  mounted() {\n    if (this.global) {\n      this.$magpie.addExpData(this.data);\n    } else {\n      Object.keys(this.data).forEach((key) => {\n        if (typeof this.data[key] !== 'undefined') {\n          Vue.set(this.$magpie.measurements, key, this.data[key]);\n        }\n      });\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n"]}]}